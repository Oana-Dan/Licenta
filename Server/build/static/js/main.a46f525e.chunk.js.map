{"version":3,"sources":["ProductStore.js","User.js","NavbarComp.js","UserStore.js","Product.js","Home.js","Order.js","Profile.js","Favorites.js","Cart.js","Login.js","Register.js","Menu.js","SoupProducts.js","TablesMap.js","TableReservation.js","TablesMapAvailability.js","Appetizer.js","MainDish.js","FastFood.js","Dessert.js","Drinks.js","Contact.js","ProductPage.js","ProductsPage.js","OrdersReport.js","ProductsReport.js","App.js","index.js","Images sync nonrecursive /.(png|jpe?g|svg)$","Images/aperitiv1.jpg","Images/ceafa_porc_cartofi_prajiti.jpg","Images/ciorba_pui.jpg","Images/clatite_ciocolata.jpg","Images/hamburger_cartofi_prajiti.jpg","Images/papanasi_visine.jpg","Images/pepsi.jpg","Images/pizza_sunca.jpg","Images/prigat_capsuni_banane.jpg","Images/supa_galuste.jpg","Images/supa_taitei.jpg"],"names":["SERVER","isLoggedIn","email","store","name","a","fetch","response","json","console","warn","productName","type","dayOfWeekDate","dayOfWeek","method","headers","body","JSON","stringify","dayOfWeekOrderedProductName","dayOfWeekOrderedProduct","tableNumber","tableDate","hourTable","toast","configure","NavbarComp","props","state","isProfile","isFavorites","isCart","value","products","searchBar","userEmail","searchProducts","getProducts","updateState","localStorage","getItem","setState","logout","clear","this","log","finalProducts","splittedValue","split","i","ProductStore","then","j","length","nume","includes","push","autoClose","position","POSITION","TOP_CENTER","variant","expand","style","backgroundColor","class","Brand","href","Toggle","aria-controls","onClick","Collapse","id","Nav","className","maxHeight","navbarScroll","Link","NavDropdown","title","Item","marginRight","onChange","e","target","placeholder","icon","to","pathname","textDecoration","React","Component","user","cartState","shoppingCart","product","order","orderID","reservation","r","images","require","keys","map","Product","Submit","loginEmail","loginParola","ok","UserStore","getUsers","parola","setItem","productData","getFavorites","favorites","isAddedFavorites","descriere","pret","gramaj","sursaImagine","removeItem","isOk","favoritesRed","imageObject","isDialogShown","openLoginDialog","bind","addFavorite","document","getElementById","color","deleteFavorite","isFavorite","hideDialog","imageSource","default","src","header","visible","onHide","marginTop","htmlFor","evt","feedback","label","Home","isRegisterVisible","simpleProducts","days","orderedProducts","bestOrderedProducts","responsiveOptions","breakpoint","numVisible","numScroll","productTemplate","productsFromDatabase","getDaysOfWeeks","last7Days","slice","totalQuantity","getDayWeekOrderedProduct","data","message","cantitate","getFinalProducts","getOrderedProducts","sort","b","circular","autoplayInterval","itemTemplate","importAll","Order","totalPrice","productBody","rowData","width","height","priceBody","goBack","window","history","back","location","ID","getProduct","livrata","numarMasa","tipPlata","starePlata","ordernumarMasa","stare","textAlign","field","marginBottom","Profile","prenume","judet","localitate","strada","etaj","apartament","telefon","openDialog","viewOrder","file","orders","reservations","getUser","getOrders","getReservations","reservationsFromDatabase","updateUser","OK","updatedUser","openOrder","users","collapsed","toggleable","toggleMask","Favorites","updateProducts","index","Cart","total","isPlacedOrder","wantToDelete","acceptDelete","rowDataToDelete","wantToPlaceOrder","row","quantityBody","quantity","rowIndex","decreaseQuantity","increaseQuantity","newQuantity","cartProduct","updateProductCart","subtotal","deleteBody","delete","deleteCartProduct","getProductsCart","rejectDelete","hideDeleteDialog","acceptPlaceOrder","date","Date","finalDate","getDate","getMonth","getFullYear","addOrder","addOrderedProduct","getDayWeek","newDay","addDayOfWeek","newOrderedProduct","addDayWeekOrderedProduct","updatedOrderedProduct","updateDayWeekOrderedProduct","updateCartState","newShoppingCart","addShoppingCart","rejectPlaceOrder","hidePlaceOrderDialog","placeOrder","marginLeft","accept","reject","Login","loginFromAnotherComponent","Register","isRegistered","addUser","Menu","refreshState","refresh","SoupProducts","getProductsByType","TablesMap","tables","updateTableStates","getTables","newTables","getTableDate","numar","newTableDate","addTableDate","tableState","currentHour","getHours","date1","setMinutes","getMinutes","hour1","hourForSearch","getTableHour","tableHour","oraIncepere","setInterval","table","fontSize","TableReservations","startDate","selectedStartHour","selectedEndHour","tablesHours","reserve","newDate","oraTerminare","newTableHour","addTableHour","addReservation","hours","match","params","dateFormat","showIcon","monthNavigator","yearNavigator","yearRange","options","optionLabel","bottom","left","TablesMapAvailability","checkAvailability","Appetizer","MainDish","FastFood","Dessert","Drinks","Contact","ProductPage","ingredients","cantity","openCartDialog","addFavorites","addCart","getShoppingCart","getProductCart","result","addProductCart","productFromDatabase","hideCartDialog","getIngredients","ingredientsFromDatabase","tip","display","ProductsPage","toLowerCase","k","Report","chartData","counter","orderNumbers","l","labels","datasets","maintainAspectRatio","aspectRatio","plugins","legend","scales","x","ticks","grid","y","ProductsReport","weekOrderedProduct","productsQuantity","chartData2","createBrowserHistory","App","path","component","exact","TableReservation","OrdersReport","ReactDOM","render","StrictMode","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.a46f525e.chunk.js","sourcesContent":["const SERVER = 'http://192.168.0.38:8080';\r\n// const SERVER = 'http://192.168.1.20:8080';\r\n// const SERVER = 'http://192.168.116.203:8080';\r\n\r\nclass ProductStore {\r\n    async getImage(name) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/images/${name}`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getProduct(name) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/products/${name}`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getProducts() {\r\n        try {\r\n            const response = await fetch(`${SERVER}/products`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getIngredients(productName) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/products/${productName}/ingredients`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getProductsByType(type) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/products/type/${type}`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getImageProduct(productName) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/images/${productName}`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getDaysOfWeeks() {\r\n        try {\r\n            const response = await fetch(`${SERVER}/daysofweeks`);\r\n            return response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getDayWeek(dayOfWeekDate) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/daysofweeks/${dayOfWeekDate}`);\r\n            return response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addDayOfWeek(dayOfWeek) {\r\n        try {\r\n            await fetch(`${SERVER}/daysofweeks`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(dayOfWeek)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getDayWeekOrderedProduct(dayOfWeekDate, dayOfWeekOrderedProductName) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/daysofweeks/${dayOfWeekDate}/dayorderedproducts/${dayOfWeekOrderedProductName}`);\r\n            return response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addDayWeekOrderedProduct(dayOfWeekDate, dayOfWeekOrderedProduct) {\r\n        try {\r\n            await fetch(`${SERVER}/daysofweeks/${dayOfWeekDate}/dayorderedproducts`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(dayOfWeekOrderedProduct)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async updateDayWeekOrderedProduct(dayOfWeekDate, dayOfWeekOrderedProductName, dayOfWeekOrderedProduct) {\r\n        try {\r\n            await fetch(`${SERVER}/daysofweeks/${dayOfWeekDate}/dayorderedproducts/${dayOfWeekOrderedProductName}`, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(dayOfWeekOrderedProduct)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getTables() {\r\n        try {\r\n            const response = await fetch(`${SERVER}/tables`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getTableDate(tableNumber, tableDate) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/tables/${tableNumber}/datestables/${tableDate}`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addTableDate(tableNumber, tableDate) {\r\n        try {\r\n            await fetch(`${SERVER}/tables/${tableNumber}/datestables`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(tableDate)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addTableHour(tableNumber, tableDate, hourTable) {\r\n        try {\r\n            await fetch(`${SERVER}/tables/${tableNumber}/datestables/${tableDate}/hourstables`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(hourTable)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getTableHour(tableNumber, tableDate, hourTable) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/tables/${tableNumber}/datestables/${tableDate}/hourstables/${hourTable}`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getTablesHours(tableNumber, tableDate) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/tables/${tableNumber}/datestables/${tableDate}/hourstables`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new ProductStore();\r\nexport default store;","let User = (function () {\r\n    let isLoggedIn = false;\r\n    let email = \"\";\r\n\r\n    let getIsLoggedIn = function () {\r\n        return isLoggedIn;\r\n    }\r\n\r\n    let setIsLoggedIn = function (isLogged) {\r\n        isLoggedIn = isLogged;\r\n    }\r\n\r\n    let getEmail = function () {\r\n        return email;\r\n    }\r\n\r\n    let setEmail = function (email2) {\r\n        email = email2;\r\n    }\r\n\r\n    return {\r\n        getIsLoggedIn: getIsLoggedIn,\r\n        setIsLoggedIn: setIsLoggedIn,\r\n        getEmail: getEmail,\r\n        setEmail: setEmail\r\n    }\r\n\r\n})()\r\n\r\nexport default User;","import React from 'react';\r\nimport './Navbar.css';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { NavLink } from 'react-router-dom';\r\nimport User from './User.js';\r\nimport ProductStore from './ProductStore';\r\nimport { Button } from 'primereact/button';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Container } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass NavbarComp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            isProfile: false,\r\n            isFavorites: false,\r\n            isCart: false,\r\n            value: '',\r\n            products: [],\r\n            searchBar: false,\r\n            userEmail: ''\r\n        }\r\n\r\n        this.searchProducts = () => {\r\n            this.getProducts();\r\n        }\r\n\r\n        // this.logout = () => {\r\n        //     User.setIsLoggedIn(false);\r\n        //     User.setEmail(null);\r\n        //     this.setState({\r\n        //         isLoggedIn: false,\r\n        //         userEmail: null\r\n        //     });\r\n        // }\r\n\r\n        this.updateState = () => {\r\n            if (localStorage.getItem('isLoggedIn')) {\r\n                this.setState({\r\n                    isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                    userEmail: localStorage.getItem('email')\r\n                });\r\n            }\r\n            if (this.props.searchBar) {\r\n                this.setState({ searchBar: this.props.searchBar });\r\n            }\r\n        }\r\n\r\n        this.logout = () => {\r\n            localStorage.clear();\r\n        }\r\n    }\r\n\r\n    async getProducts() {\r\n        if (this.state.value) {\r\n            console.log(this.state.value);\r\n            let finalProducts = [];\r\n            let splittedValue = this.state.value.split(' ');\r\n            for (let i = 0; i < splittedValue.length; i++) {\r\n                await ProductStore.getProducts().then((response) => {\r\n                    console.log(response);\r\n                    for (let j = 0; j < response.length; j++) {\r\n                        if (response[j].nume.includes(splittedValue[i])) {\r\n                            finalProducts.push(response[j]);\r\n                            this.setState({ products: finalProducts });\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            toast('Introduceti un produs!', {\r\n                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({\r\n                isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                userEmail: localStorage.getItem('email')\r\n            });\r\n        }\r\n        if (this.props.searchBar) {\r\n            this.setState({ searchBar: this.props.searchBar });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar variant=\"light\" expand=\"lg\" style={{ backgroundColor: \"rgb(140, 35, 158)\" }} class>\r\n                    <Navbar.Brand href=\"/\">Restaurant</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" onClick={this.updateState} />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav\r\n                            className=\"mr-auto my-2 my-lg-0\"\r\n                            style={{ maxHeight: '100px' }}\r\n                            navbarScroll\r\n                        >\r\n                            <Nav.Link href=\"/\"><i className=\"navIcons pi pi-home\"></i>Acasa</Nav.Link>\r\n                            <Nav.Link href=\"/logare\"><i className=\"navIcons pi pi-sign-in\"></i>Logare</Nav.Link>\r\n                            <Nav.Link href=\"/harta\"><i className=\"navIcons pi pi-table\"></i>  Harta mese</Nav.Link>\r\n                            <NavDropdown title=\"Meniu\" id=\"navbarScrollingDropdown\">\r\n                                <NavDropdown.Item href=\"/meniu\">Meniu</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/aperitive\">Aperitive</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/supe_ciorbe\">Supe/Ciorbe</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/fel_principal\">Fel principal</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/fast_food\">FastFood</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/desert\">Desert</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/bauturi\">Bauturi</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Cont\" id=\"navbarScrollingDropdown\" style={{ marginRight: \"2vw\" }}>\r\n                                <NavDropdown.Item href=\"/profil\"><i className=\"navIcons pi pi-user\"></i>  Profil</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/favorite\"><i className=\"navIcons pi pi-heart\"></i>  Favorite</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <>{(this.state.userEmail === \"admin\") ?\r\n                                <div>\r\n                                    <NavDropdown title=\"Rapoarte\" id=\"navbarScrollingDropdown\">\r\n                                        <NavDropdown.Item href=\"/rapoarte_comenzi\"><i className=\"pi pi-chart-bar\"></i>Rapoarte comenzi</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"/rapoarte_produse\"><i className=\"pi pi-chart-bar\"></i>Rapoarte produse</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }</>\r\n                            {/* <Nav.Link href=\"/contact\"><i className=\"fas fa-phone\"></i>  Contact</Nav.Link> */}\r\n                            <Nav.Link href=\"/cos\"><i className=\"navIcons pi pi-shopping-cart\"></i>Cos</Nav.Link>\r\n                            <Nav.Link onClick={this.logout} href=\"/\"><i className=\"navIcons pi pi-sign-out\"></i>  Delogare</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <>{this.state.searchBar ?\r\n                    <div className=\"searchBarContainer\">\r\n                        <span className=\"p-input-icon-left\">\r\n                            <i className=\"pi pi-search\" />\r\n                            <InputText className=\"searchBar\" value={this.state.value} onChange={(e) => this.setState({ value: e.target.value })} placeholder=\"Search\" />\r\n                        </span>\r\n                        <>{(this.state.value === \"\") ?\r\n                            <Button icon=\"pi pi-arrow-right\" className=\"p-button-raised p-button-text\" onClick={this.searchProducts} />\r\n                            :\r\n                            <Link to={{\r\n                                pathname: \"/produse_cautate\",\r\n                                products: this.state.products,\r\n                                value: this.state.value\r\n                            }}\r\n                                style={{ textDecoration: \"none\" }}>\r\n                                <Button icon=\"pi pi-arrow-right\" className=\"p-button-raised p-button-text\" onClick={this.searchProducts} />\r\n                            </Link>\r\n                        }\r\n                        </>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarComp;","const SERVER = 'http://192.168.0.38:8080';\r\n// const SERVER = 'http://192.168.1.20:8080';\r\n// const SERVER = 'http://192.168.116.203:8080';\r\n\r\nclass UserStore {\r\n    async addUser(user) {\r\n        try {\r\n            await fetch(`${SERVER}/users`,\r\n                {\r\n                    method: 'post',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(user)\r\n                })\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getUsers() {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users`);\r\n            return await response.json();\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getUser(userEmail) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}`);\r\n            return await response.json();\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async updateUser(userEmail, user) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}`, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getShoppingCart(userEmail, cartState) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/shoppingcarts/${cartState}`);\r\n            return await response.json();\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getProductsCart(userEmail, cartState) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/shoppingcarts/${cartState}/cartproducts`);\r\n            return response.json();\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addShoppingCart(userEmail, shoppingCart) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/shoppingcarts`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(shoppingCart)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getProductCart(userEmail, cartState, productName) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/shoppingcarts/${cartState}/cartproducts/${productName}`);\r\n            return response.json();\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addProductCart(userEmail, cartState, product) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/shoppingcarts/${cartState}/cartproducts`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(product)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async updateProductCart(userEmail, cartState, productName, product) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/shoppingcarts/${cartState}/cartproducts/${productName}`, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(product)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async deleteCartProduct(userEmail, cartState, productName) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/shoppingcarts/${cartState}/cartproducts/${productName}`, {\r\n                method: 'delete'\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async updateCartState(userEmail, cartState, shoppingCart) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/shoppingcarts/${cartState}`, {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(shoppingCart)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getFavorites(userEmail) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/favoriteproducts`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addFavorite(userEmail, product) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/favoriteproducts`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(product)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async deleteFavorite(userEmail, productName) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/favoriteproducts/${productName}`, {\r\n                method: 'delete'\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getOrders(userEmail) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/orders`);\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addOrder(userEmail, order) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/orders`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(order)\r\n            })\r\n            return response.json();\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addOrderedProduct(userEmail, orderID, product) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/orders/${orderID}/orderedproducts`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(product)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getOrderedProducts(userEmail, orderID) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/orders/${orderID}/orderedproducts`);\r\n            return response.json();\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async addReservation(userEmail, reservation) {\r\n        try {\r\n            await fetch(`${SERVER}/users/${userEmail}/reservations`, {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(reservation)\r\n            })\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    async getReservations(userEmail) {\r\n        try {\r\n            const response = await fetch(`${SERVER}/users/${userEmail}/reservations`);\r\n            return response.json();\r\n        }\r\n        catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n}\r\nconst store = new UserStore();\r\n\r\nexport default store;","import React from 'react';\r\nimport './Product.css';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Password } from 'primereact/password';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nfunction importAll(r) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nconst images = importAll(require.context('./Images', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nclass Product extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nume: '',\r\n            descriere: '',\r\n            pret: 0,\r\n            gramaj: 0,\r\n            sursaImagine: '',\r\n            isAddedFavorites: false,\r\n            removeItem: false,\r\n            isOk: false,\r\n            favoritesRed: false,\r\n            icon: null,\r\n            isLoggedIn: false,\r\n            userEmail: '',\r\n            imageObject: {},\r\n            isDialogShown: false,\r\n            openLoginDialog: false,\r\n            loginEmail: '',\r\n            loginParola: ''\r\n        }\r\n\r\n        this.Submit = this.Submit.bind(this);\r\n\r\n        this.addFavorite = () => {\r\n            if (this.state.isLoggedIn) {\r\n                let icon = document.getElementById(`heart_${this.props.productData.nume}`);\r\n                if (this.state.isAddedFavorites === false) {\r\n                    icon.style.color = \"red\";\r\n                    let productName = { nume: `${this.props.productData.nume}` }\r\n                    UserStore.addFavorite(this.state.userEmail, productName);\r\n                    this.props.productData.isAddedFavorites = true;\r\n                    this.setState({\r\n                        removeItem: false,\r\n                        isAddedFavorites: true\r\n                    })\r\n                }\r\n                else if (this.state.isAddedFavorites === true) {\r\n                    {\r\n                        icon.style.color = \"grey\";\r\n                        UserStore.deleteFavorite(this.state.userEmail, this.props.productData.nume);\r\n                        this.props.productData.isAddedFavorites = false;\r\n                        if (this.props.isOk) {\r\n                            this.setState({\r\n                                removeItem: false,\r\n                                isAddedFavorites: false\r\n                            })\r\n                        }\r\n                        else if (this.props.isFavorite) {\r\n                            this.setState({\r\n                                removeItem: true,\r\n                                isAddedFavorites: false\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.setState({ openLoginDialog: true })\r\n            }\r\n        }\r\n\r\n        this.openLoginDialog = () => {\r\n            this.setState({ openLoginDialog: true });\r\n        }\r\n\r\n        this.hideDialog = () => {\r\n            this.setState({ openLoginDialog: false });\r\n        }\r\n    }\r\n\r\n    Submit = () => {\r\n        let OK = true;\r\n        if (this.state.loginEmail === \"\") {\r\n            OK = false;\r\n            toast('Email-ul trebuie completat!', {\r\n                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n            })\r\n        }\r\n        else if (this.state.loginParola === \"\") {\r\n            OK = false;\r\n            toast('Parola trebuie completata!', {\r\n                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n            })\r\n        }\r\n        else {\r\n            let ok = false;\r\n            let promise = UserStore.getUsers();\r\n            promise.then(response => {\r\n                for (let i = 0; i < response.length; i++) {\r\n                    if (response[i].email === this.state.loginEmail && response[i].parola === this.state.loginParola) {\r\n                        this.setState({ isLoggedIn: true })\r\n                        localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                        localStorage.setItem('email', this.state.email);\r\n                        ok = true;\r\n                        this.setState({ nume: this.props.productData.nume });\r\n                        UserStore.getFavorites(this.state.loginEmail).then((favorites) => {\r\n                            for (let j = 0; j < favorites.length; j++) {\r\n                                if (favorites[i].nume === this.state.nume) {\r\n                                    this.setState({ isAddedFavorites: true });\r\n                                }\r\n                            }\r\n                            if (localStorage.getItem('isLoggedIn')) {\r\n                                this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n                            }\r\n                            if (localStorage.getItem('email')) {\r\n                                this.setState({ userEmail: localStorage.getItem('email') });\r\n                            }\r\n                            // this.props.refresh();\r\n                        })\r\n                    }\r\n                    else if (response[i].email === this.state.loginEmail && response[i].parola !== this.state.loginParola) {\r\n                        toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                        ok = true;\r\n                    }\r\n                }\r\n                if (ok === false) {\r\n                    toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                        autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ nume: this.props.productData.nume });\r\n        if (this.props.productData.isAddedFavorites) {\r\n            this.setState({ isAddedFavorites: this.props.productData.isAddedFavorites });\r\n        }\r\n        this.setState({ isOk: this.props.isOk });\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n        }\r\n        if (localStorage.getItem('email')) {\r\n            this.setState({ userEmail: localStorage.getItem('email') });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let imageSource;\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (images[i].default.includes(this.props.productData.nume)) {\r\n                imageSource = images[i].default;\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                {(!this.state.removeItem || this.props.isOk) ?\r\n                    <div className=\"product\">\r\n                        <div className=\"product-container\">\r\n                            <img src={imageSource} className=\"productImage\" />\r\n                            {(this.state.isAddedFavorites) ?\r\n                                <i id={`heart_${this.props.productData.nume}`} className=\"fa fa-heart fa-lg heart_red\" onClick={this.addFavorite}></i>\r\n                                :\r\n                                <i id={`heart_${this.props.productData.nume}`} className=\"fa fa-heart fa-lg heart_grey\" onClick={this.addFavorite}></i>\r\n                            }\r\n                        </div>\r\n                        <div className=\"productDetails\">Descriere: {this.props.productData.descriere}</div>\r\n                        <div className=\"productDetails\">Pret: {this.props.productData.pret} lei</div>\r\n                        <div className=\"viewButton\">\r\n                            <Button><Link style={{ color: \"white\", textDecoration: \"none\" }} to=\r\n                                {{\r\n                                    pathname: `produse/${this.props.productData.nume}`,\r\n                                    productData: this.props.productData,\r\n                                    isOk: this.props.isOk\r\n                                }}>\r\n                                Vizualizare produs</Link></Button>\r\n                        </div>\r\n                        <Dialog header=\"Nu esti conectat\" visible={this.state.openLoginDialog} onHide={this.hideDialog} className='p-fluid'>\r\n                            <>{this.state.isLoggedIn ?\r\n                                <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                                    Ati fost conectat cu succes!\r\n                                </h2>\r\n                                :\r\n                                <div>\r\n                                    <div>\r\n                                        <h2 className=\"title\">Intra in cont</h2>\r\n                                        <div className=\"boxLogin\">\r\n                                            <div className=\"email\">\r\n                                                <label htmlFor=\"Email\" >Email</label>\r\n                                                <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.loginEmail} onChange={(evt) => this.setState({ loginEmail: evt.target.value })} />\r\n                                            </div>\r\n                                            <div className=\"email\">\r\n                                                <label htmlFor=\"Parola\" >Parola</label>\r\n                                                <Password className=\"inputTextLogin\" type=\"text\" value={this.state.loginParola} onChange={(evt) => this.setState({ loginParola: evt.target.value })} feedback={false} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"centerLogin\">\r\n                                        <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            </>\r\n                        </Dialog>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport { Carousel } from 'primereact/carousel';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isRegisterVisible: false,\r\n            simpleProducts: [],\r\n            products: [],\r\n            days: [],\r\n            orderedProducts: [],\r\n            bestOrderedProducts: []\r\n        }\r\n\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 3,\r\n                numScroll: 3\r\n            },\r\n            {\r\n                breakpoint: '600px',\r\n                numVisible: 2,\r\n                numScroll: 2\r\n            },\r\n            {\r\n                breakpoint: '480px',\r\n                numVisible: 1,\r\n                numScroll: 1\r\n            }\r\n        ];\r\n\r\n        this.productTemplate = this.productTemplate.bind(this);\r\n    }\r\n\r\n    productTemplate(product) {\r\n        return (\r\n            <Product productData={product} isOk={true} />\r\n        );\r\n    }\r\n\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async getOrderedProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            let productsFromDatabase = await ProductStore.getDaysOfWeeks();\r\n            let days = productsFromDatabase;\r\n            this.setState({ days: days });\r\n            let last7Days = days.slice(-7);\r\n            let totalQuantity = 0;\r\n            for (let j = 0; j < last7Days.length; j++) {\r\n                let product = await ProductStore.getDayWeekOrderedProduct(last7Days[j].data, response[i].nume);\r\n                if (product.message !== \"not found\") {\r\n                    totalQuantity += product.cantitate;\r\n                }\r\n                response[i].totalQuantity = totalQuantity;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        ProductStore.getProducts().then((response) => {\r\n            this.setState({ simpleProducts: response });\r\n            this.getFinalProducts(response).then(() => {\r\n                this.setState({ products: response });\r\n            })\r\n            this.getOrderedProducts(response).then(() => {\r\n                this.setState({ orderedProducts: response });\r\n                let orderedProducts = this.state.orderedProducts;\r\n                orderedProducts.sort(function (a, b) {\r\n                    return b.totalQuantity - a.totalQuantity\r\n                })\r\n                let bestOrderedProducts = orderedProducts.slice(0, 5);\r\n                this.setState({ bestOrderedProducts: bestOrderedProducts });\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // this.state.isRegisterVisible ?\r\n            // <Register />\r\n            // :\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"carouselContainer\">\r\n                    <Carousel className=\"custom-carousel\" value={this.state.bestOrderedProducts} numVisible={1} numScroll={1} responsiveOptions={this.responsiveOptions} circular\r\n                        autoplayInterval={5000} itemTemplate={this.productTemplate} header={<h5>Cele mai cumparate produse</h5>} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport ProductStore from './ProductStore';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\n\r\nfunction importAll(r) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nconst images = importAll(require.context('./Images', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nclass Order extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            order: null,\r\n            userEmail: '',\r\n            products: [],\r\n            totalPrice: 0\r\n        }\r\n\r\n        this.productBody = (rowData) => {\r\n            let imageSource;\r\n            for (let i = 0; i < images.length; i++) {\r\n                if (images[i].default.includes(`${rowData.nume}`)) {\r\n                    imageSource = images[i].default;\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    <img src={imageSource} width=\"90vw\" height=\"70vh\" />\r\n                    <div style={{ marginTop: \"1vh\" }}>{rowData.descriere}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.priceBody = (rowData) => {\r\n            return (\r\n                <div>{rowData.pret} lei</div>\r\n            )\r\n        }\r\n\r\n        this.goBack = () => {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    async getFinalProducts() {\r\n        let totalPrice = 0;\r\n        let orderedProducts = await UserStore.getOrderedProducts(localStorage.getItem('email'), this.props.location.order.ID);\r\n        for (let i = 0; i < orderedProducts.length; i++) {\r\n            let product = await ProductStore.getProduct(orderedProducts[i].nume);\r\n            orderedProducts[i].pret = product.pret;\r\n            orderedProducts[i].descriere = product.descriere;\r\n            totalPrice += orderedProducts[i].pret * orderedProducts[i].cantitate;\r\n        }\r\n        this.setState({\r\n            products: orderedProducts,\r\n            totalPrice: totalPrice\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            order: this.props.location.order,\r\n            userEmail: localStorage.getItem('email')\r\n        });\r\n\r\n        this.getFinalProducts();\r\n        if (this.props.location.order.livrata === true) {\r\n            this.props.location.order.livrata = \"da\";\r\n        }\r\n        else if (this.props.location.order.livrata === false) {\r\n            this.props.location.order.livrata = \"nu\";\r\n        }\r\n        else if (this.props.location.order.livrata === null) {\r\n            this.props.location.order.livrata = \"-\";\r\n        }\r\n        if (this.props.location.order.numarMasa === null) {\r\n            this.props.location.order.numarMasa = \"-\";\r\n        }\r\n        if (this.props.location.order.tipPlata === null) {\r\n            this.props.location.order.tipPlata = \"-\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"orderContainer\">\r\n                    <div>ID: {this.props.location.order.ID}</div>\r\n                    <div>Data: {this.props.location.order.data}</div>\r\n                    <div>Tip plata: {this.props.location.order.tipPlata}</div>\r\n                    <div>Stare plata: {this.props.location.order.starePlata}</div>\r\n                    <div>Numar masa: {this.props.location.order.ordernumarMasa}</div>\r\n                    <div>Stare comanda: {this.props.location.order.stare}</div>\r\n                    <div>Livrata la domiciliu: {this.props.location.order.livrata}</div>\r\n                </div>\r\n                <div className=\"orderedProducts\">\r\n                    <DataTable value={this.state.products} header=\"Produse\">\r\n                        <Column style={{ textAlign: \"center\" }} header=\"Produs\" body={this.productBody} />\r\n                        <Column style={{ textAlign: \"center\" }} header=\"Cantitate\" field=\"cantitate\" />\r\n                        <Column style={{ textAlign: \"center\" }} header=\"Pret\" body={this.priceBody} />\r\n                    </DataTable>\r\n                </div>\r\n                <div className=\"totalPriceContainer\">\r\n                    <div className=\"totalPrice\" style={{ marginRight: \"11vw\", marginBottom: \"3vh\" }}>{this.state.totalPrice} lei</div>\r\n                </div>\r\n                <div className=\"backButtonProduct\">\r\n                    <Button label=\"Inapoi\" icon=\"pi pi-chevron-left\" onClick={this.goBack} className=\"p-button-raised p-button-text\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\n\r\nimport Navbar from './NavbarComp';\r\nimport UserStore from './UserStore';\r\nimport Order from './Order';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Panel } from 'primereact/panel';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            userEmail: '',\r\n            user: '',\r\n            nume: '',\r\n            prenume: '',\r\n            email: '',\r\n            parola: '',\r\n            judet: '',\r\n            localitate: '',\r\n            strada: '',\r\n            etaj: '',\r\n            apartament: '',\r\n            telefon: '',\r\n            openDialog: false,\r\n            viewOrder: false,\r\n            order: null,\r\n            file: null,\r\n            openLoginDialog: false,\r\n            loginEmail: '',\r\n            loginParola: '',\r\n            orders: [],\r\n            reservations: []\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            if (this.state.loginEmail === \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.loginParola === \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let ok = false;\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.loginEmail && response[i].parola === this.state.loginParola) {\r\n                            this.setState({ isLoggedIn: true })\r\n                            localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                            localStorage.setItem('email', this.state.loginEmail);\r\n                            ok = true;\r\n                            console.log(localStorage.getItem('isLoggedIn'), localStorage.getItem('email'))\r\n                            if (localStorage.getItem('isLoggedIn')) {\r\n                                this.setState({\r\n                                    isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                                    userEmail: localStorage.getItem('email')\r\n                                });\r\n                                UserStore.getUser(this.state.userEmail).then((user) => {\r\n                                    this.setState({\r\n                                        user: user,\r\n                                        nume: user.nume,\r\n                                        prenume: user.prenume,\r\n                                        email: user.email,\r\n                                        parola: user.parola,\r\n                                        judet: user.judet,\r\n                                        localitate: user.localitate,\r\n                                        strada: user.strada,\r\n                                        etaj: user.etaj,\r\n                                        apartament: user.apartament,\r\n                                        telefon: user.telefon\r\n                                    });\r\n                                    UserStore.getOrders(this.state.userEmail).then((response) => {\r\n                                        let orders = response;\r\n                                        this.setState({ orders: orders });\r\n                                        UserStore.getReservations(this.state.userEmail).then((reservations) => {\r\n                                            let reservationsFromDatabase = reservations;\r\n                                            this.setState({ reservations: reservationsFromDatabase });\r\n                                        })\r\n                                    })\r\n                                })\r\n                            }\r\n                        }\r\n                        else if (response[i].email === this.state.loginEmail && response[i].parola !== this.state.loginParola) {\r\n                            toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = true;\r\n                        }\r\n                    }\r\n                    if (ok === false) {\r\n                        toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        this.openLoginDialog = () => {\r\n            this.setState({ openLoginDialog: true });\r\n        }\r\n\r\n        this.hideDialog = () => {\r\n            this.setState({ openLoginDialog: false });\r\n        }\r\n\r\n        this.updateUser = () => {\r\n            let OK = true;\r\n            if (this.state.nume == \"\") {\r\n                OK = false;\r\n                toast('Numele trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.prenume == \"\") {\r\n                OK = false;\r\n                toast('Prenumele trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.email == \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.parola == \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.telefon == \"\") {\r\n                OK = false;\r\n                toast('Telefonul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            if (OK === true) {\r\n                let updatedUser = {\r\n                    nume: this.state.nume, prenume: this.state.prenume, email: this.state.email, parola: this.state.parola,\r\n                    judet: this.state.judet, localitate: this.state.localitate, strada: this.state.strada, etaj: this.state.etaj,\r\n                    apartament: this.state.apartament, telefon: this.state.telefon\r\n                };\r\n                UserStore.updateUser(this.state.userEmail, updatedUser);\r\n                toast('Modificarile au fost salvate!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n        }\r\n\r\n        this.viewOrder = (rowData) => {\r\n            return (\r\n                <div>\r\n                    <Link to={{\r\n                        pathname: '/comanda',\r\n                        order: rowData\r\n                    }}\r\n                        style={{ textDecoration: \"none\" }}>\r\n                        <Button icon=\"pi pi-eye\" className=\"p-button-raised p-button-text p-button-sm\" />\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.openOrder = (rowData) => {\r\n            this.setState({\r\n                viewOrder: true,\r\n                order: rowData\r\n            });\r\n        }\r\n\r\n        this.goBack = () => {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({\r\n                isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                userEmail: localStorage.getItem('email')\r\n            });\r\n            UserStore.getUser(this.state.userEmail).then((users) => {\r\n                let user = users[0];\r\n                this.setState({\r\n                    user: user,\r\n                    nume: user.nume,\r\n                    prenume: user.prenume,\r\n                    email: user.email,\r\n                    parola: user.parola,\r\n                    judet: user.judet,\r\n                    localitate: user.localitate,\r\n                    strada: user.strada,\r\n                    etaj: user.etaj,\r\n                    apartament: user.apartament,\r\n                    telefon: user.telefon\r\n                });\r\n                UserStore.getOrders(this.state.userEmail).then((response) => {\r\n                    let orders = response;\r\n                    this.setState({ orders: orders });\r\n                    UserStore.getReservations(this.state.userEmail).then((reservations) => {\r\n                        let reservationsFromDatabase = reservations;\r\n                        this.setState({ reservations: reservationsFromDatabase });\r\n                    })\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>{this.state.isLoggedIn ?\r\n                <div>\r\n                    <Navbar searchBar={true} />\r\n                    <div className=\"profileContainer\">\r\n                        <Panel className=\"profilePanel\" header=\"Informatii personale\" collapsed={true} toggleable >\r\n                            <div className=\"editProfileContainer\">\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Nume\">Nume </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.nume} onChange={(evt) => this.setState({ nume: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Prenume\">Prenume </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.prenume} onChange={(evt) => this.setState({ prenume: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Email\">Email </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.email} onChange={(evt) => this.setState({ email: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Parola\">Parola </label>\r\n                                    <Password style={{ marginTop: \"0.5vh\" }} value={this.state.parola} onChange={(evt) => this.setState({ parola: evt.target.value })} toggleMask />\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Judet\">Judet </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.judet} onChange={(evt) => this.setState({ judet: evt.target.value })({ email: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Localitate\">Localitate </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.localitate} onChange={(evt) => this.setState({ localitate: evt.target.value })({ email: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Strada\">Strada </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.strada} onChange={(evt) => this.setState({ strada: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Etaj\">Etaj </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.etaj} onChange={(evt) => this.setState({ etaj: evt.target.value })({ email: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Apartament\">Apartament </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.apartament} onChange={(evt) => this.setState({ apartament: evt.target.value })({ etaj: evt.target.value })({ email: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Telefon\">Telefon </label>\r\n                                    <span className=\"p-input-icon-right\">\r\n                                        <i className=\"pi pi-pencil\" />\r\n                                        <InputText value={this.state.telefon} onChange={(evt) => this.setState({ telefon: evt.target.value })({ etaj: evt.target.value })({ email: evt.target.value })} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"updateUserButton\">\r\n                                <Button style={{ marginTop: \"1vh\" }} onClick={this.updateUser}>Salveaza modificarile</Button>\r\n                            </div>\r\n                        </Panel>\r\n                        <Panel className=\"profilePanel\" header=\"Comenzi\" collapsed={true} toggleable style={{ marginTop: \"3vh\" }}>\r\n                            <DataTable className=\"ordersTable\" value={this.state.orders} style={{ marginTop: \"3vh\" }}>\r\n                                <Column style={{ textAlign: \"center\" }} header=\"ID\" field=\"ID\" />\r\n                                <Column style={{ textAlign: \"center\" }} header=\"Data\" field=\"data\" />\r\n                                <Column style={{ textAlign: \"center\" }} body={this.viewOrder} />\r\n                            </DataTable>\r\n                        </Panel>\r\n                        <Panel className=\"profilePanel\" header=\"Rezervari\" collapsed={true} toggleable style={{ marginTop: \"3vh\" }}>\r\n                            <DataTable className=\"reservationsTable\" value={this.state.reservations} style={{ marginTop: \"3vh\" }}>\r\n                                <Column style={{ textAlign: \"center\" }} header=\"ID\" field=\"numar\" />\r\n                                <Column style={{ textAlign: \"center\" }} header=\"Data\" field=\"data\" />\r\n                                <Column style={{ textAlign: \"center\" }} header=\"Ora incepere\" field=\"oraIncepere\" />\r\n                                <Column style={{ textAlign: \"center\" }} header=\"Ora terminare\" field=\"oraTerminare\" />\r\n                                <Column style={{ textAlign: \"center\" }} header=\"Numar masa\" field=\"numarMasa\" />\r\n                            </DataTable>\r\n                        </Panel>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <Navbar searchBar={true} />\r\n                    <div className=\"centerCartMessage\" style={{ color: \"rgb(140, 35, 158)\", textDecoration: \"underline\" }}><h2 onClick={this.openLoginDialog}>Conecteaza-te pentru a vedea profilul</h2></div>\r\n                </div>\r\n            }\r\n                <Dialog header=\"Nu esti conectat\" visible={this.state.openLoginDialog} onHide={this.hideDialog} className='p-fluid'>\r\n                    <>{this.state.isLoggedIn ?\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                            Ati fost conectat cu succes!\r\n                        </h2>\r\n                        :\r\n                        < div >\r\n                            <div className=\"login\">\r\n                                <h2 className=\"title\">Intra in cont</h2>\r\n                                <div className=\"boxLogin\">\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Email\" >Email</label>\r\n                                        <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.loginEmail} onChange={(evt) => this.setState({ loginEmail: evt.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Parola\" >Parola</label>\r\n                                        <Password className=\"inputTextLogin\" type=\"text\" value={this.state.loginParola} onChange={(evt) => this.setState({ loginParola: evt.target.value })} feedback={false} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"centerLogin\">\r\n                                <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    </>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport UserStore from './UserStore';\r\nimport User from './User';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass Favorites extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            userEmail: '',\r\n            isLoggedIn: false,\r\n            openLoginDialog: false,\r\n            loginEmail: '',\r\n            loginParola: ''\r\n        }\r\n\r\n        this.updateProducts = () => {\r\n            let productsFromDatabase = [];\r\n            if (localStorage.getItem('email')) {\r\n                UserStore.getFavorites(localStorage.getItem('email')).then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        this.getFinalProducts(response).then(() => {\r\n                            this.setState({ products: response });\r\n                        })\r\n                    }\r\n                    this.setState({ products: productsFromDatabase });\r\n                })\r\n            }\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            if (this.state.loginEmail === \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.loginParola === \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let ok = false;\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.loginEmail && response[i].parola === this.state.loginParola) {\r\n                            this.setState({ isLoggedIn: true })\r\n                            localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                            localStorage.setItem('email', this.state.loginEmail);\r\n                            ok = true;\r\n                            let productsFromDatabase = [];\r\n                            if (localStorage.getItem('email')) {\r\n                                UserStore.getFavorites(localStorage.getItem('email')).then(response => {\r\n                                    for (let i = 0; i < response.length; i++) {\r\n                                        this.getFinalProducts(response).then(() => {\r\n                                            this.setState({ products: response });\r\n                                        })\r\n                                    }\r\n                                    this.setState({ products: productsFromDatabase });\r\n                                })\r\n                            }\r\n                        }\r\n                        else if (response[i].email === this.state.loginEmail && response[i].parola !== this.state.loginParola) {\r\n                            toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = true;\r\n                        }\r\n                    }\r\n                    if (ok === false) {\r\n                        toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        this.openLoginDialog = () => {\r\n            this.setState({ openLoginDialog: true });\r\n        }\r\n\r\n        this.hideDialog = () => {\r\n            this.setState({ openLoginDialog: false });\r\n        }\r\n    }\r\n\r\n    async getFinalProducts(products) {\r\n        for (let i = 0; i < products.length; i++) {\r\n            let product = await ProductStore.getProduct(products[i].nume);\r\n            products[i].pret = product.pret;\r\n            products[i].descriere = product.descriere;\r\n            products[i].isAddedFavorites = true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (localStorage.getItem('email')) {\r\n            this.setState({ userEmail: localStorage.getItem('email') });\r\n        }\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n        }\r\n        let productsFromDatabase = [];\r\n        if (localStorage.getItem('email')) {\r\n            UserStore.getFavorites(localStorage.getItem('email')).then(response => {\r\n                for (let i = 0; i < response.length; i++) {\r\n                    this.getFinalProducts(response).then(() => {\r\n                        this.setState({ products: response });\r\n                    })\r\n                }\r\n                this.setState({ products: productsFromDatabase });\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>{this.state.isLoggedIn ?\r\n                <>{(this.state.products.length !== 0) ?\r\n                    <div>\r\n                        <Navbar searchBar={true} />\r\n                        <div className=\"products\">\r\n                            {\r\n                                this.state.products.map((e, index) => <Product key={index} productData={e} isFavorite={true} />)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <Navbar searchBar={true} />\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\" }} className=\"centerCartMessage\">\r\n                            Lista de favorite este goala\r\n                        </h2>\r\n                        <Link className=\"centerCartMessage\" to=\"/meniu\" style={{ color: \"rgb(140, 35, 158)\" }}>Vizualizeaza meniul</Link>\r\n                    </div>\r\n                }\r\n                </>\r\n                :\r\n                <div>\r\n                    <Navbar searchBar={true} />\r\n                    <div className=\"centerCartMessage\" style={{ color: \"rgb(140, 35, 158)\", textDecoration: \"underline\" }}><h2 onClick={this.openLoginDialog}>Conecteaza-te pentru a vedea favoritele</h2></div>\r\n                </div>\r\n            }\r\n                <Dialog header=\"Nu esti conectat\" visible={this.state.openLoginDialog} onHide={this.hideDialog} className='p-fluid'>\r\n                    <>{this.state.isLoggedIn ?\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                            Ati fost conectat cu succes!\r\n                        </h2>\r\n                        :\r\n                        < div >\r\n                            <div className=\"login\">\r\n                                <h2 className=\"title\">Intra in cont</h2>\r\n                                <div className=\"boxLogin\">\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Email\" >Email</label>\r\n                                        <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.loginEmail} onChange={(evt) => this.setState({ loginEmail: evt.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Parola\" >Parola</label>\r\n                                        <Password className=\"inputTextLogin\" type=\"text\" value={this.state.loginParola} onChange={(evt) => this.setState({ loginParola: evt.target.value })} feedback={false} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"centerLogin\">\r\n                                <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    </>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorites;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport UserStore from './UserStore';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { Link } from 'react-router-dom';\r\nimport { ConfirmDialog } from 'primereact/confirmdialog';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nfunction importAll(r) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nconst images = importAll(require.context('./Images', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nclass Cart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            finalProducts: [],\r\n            isLoggedIn: false,\r\n            userEmail: '',\r\n            total: 0,\r\n            isPlacedOrder: false,\r\n            ID: 0,\r\n            wantToDelete: false,\r\n            acceptDelete: false,\r\n            rowDataToDelete: null,\r\n            wantToPlaceOrder: false,\r\n            openLoginDialog: false,\r\n            loginEmail: '',\r\n            loginParola: ''\r\n        }\r\n\r\n        this.productBody = (rowData, row) => {\r\n            let imageSource;\r\n            for (let i = 0; i < images.length; i++) {\r\n                if (images[i].default.includes(`${rowData.nume}`)) {\r\n                    imageSource = images[i].default;\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    <img src={imageSource} width=\"90vw\" height=\"70vh\" />\r\n                    <div style={{ textAlign: 'center' }}>{rowData.descriere}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.quantityBody = (rowData, row) => {\r\n            let products = [...this.state.finalProducts];\r\n            let product = { ...products[row.rowIndex] };\r\n            let quantity = product.cantitate;\r\n            return (\r\n                <div className='outer'>\r\n                    <span className='inner'>\r\n                        <Button icon=\"pi pi-minus\" className=\"p-button-raised p-button-text p-button-sm\" onClick={() => this.decreaseQuantity(rowData, row)} />\r\n                    </span>\r\n                    <span className='inner'>{quantity}</span>\r\n                    <span className='inner'>\r\n                        <Button icon=\"pi pi-plus\" className=\"p-button-raised p-button-text p-button-sm\" onClick={() => this.increaseQuantity(rowData, row)} />\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.increaseQuantity = (rowData, row) => {\r\n            if (this.state.isLoggedIn) {\r\n                if (rowData.cantitate <= 9) {\r\n                    let newQuantity = rowData.cantitate + 1;\r\n                    let cartProduct = { nume: `${rowData.nume}`, cantitate: newQuantity };\r\n                    UserStore.updateProductCart(localStorage.getItem('email'), \"in procesare\", rowData.nume, cartProduct);\r\n                    let products = [...this.state.finalProducts];\r\n                    let product = { ...products[row.rowIndex] };\r\n                    product.cantitate += 1;\r\n                    product.subtotal = product.cantitate * product.pret;\r\n                    products[row.rowIndex] = product;\r\n                    let total = this.state.total;\r\n                    total += product.pret;\r\n                    this.setState({\r\n                        finalProducts: products,\r\n                        total: total\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        this.decreaseQuantity = (rowData, row) => {\r\n            if (this.state.isLoggedIn) {\r\n                if (rowData.cantitate >= 2) {\r\n                    let newQuantity = rowData.cantitate - 1;\r\n                    let cartProduct = { nume: `${rowData.nume}`, cantitate: newQuantity };\r\n                    UserStore.updateProductCart(localStorage.getItem('email'), \"in procesare\", rowData.nume, cartProduct);\r\n                    let products = [...this.state.finalProducts];\r\n                    let product = { ...products[row.rowIndex] };\r\n                    product.cantitate -= 1;\r\n                    product.subtotal = product.cantitate * product.pret;\r\n                    products[row.rowIndex] = product;\r\n                    this.setState({ finalProducts: products });\r\n                    let total = this.state.total;\r\n                    total -= product.pret;\r\n                    this.setState({\r\n                        finalProducts: products,\r\n                        total: total\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        this.deleteBody = (rowData, row) => {\r\n            let products = [...this.state.finalProducts];\r\n            let product = { ...products[row.rowIndex] };\r\n            let subtotal = product.subtotal;\r\n            return (\r\n                <div className='deleteItem'>\r\n                    <div style={{ marginTop: '5vh' }}>\r\n                        <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-primary p-button-outlined\" onClick={() => this.delete(rowData, row)} />\r\n                    </div>\r\n                    <div style={{ marginTop: '2vh' }}>{subtotal} lei </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.acceptDelete = () => {\r\n            UserStore.deleteCartProduct(localStorage.getItem('email'), \"in procesare\", this.state.rowDataToDelete.nume).then(() => {\r\n                UserStore.getProductsCart(localStorage.getItem('email'), \"in procesare\").then((response) => {\r\n                    this.getFinalProducts(response).then(() => {\r\n                        this.setState({\r\n                            finalProducts: response,\r\n                            wantToDelete: false\r\n                        });\r\n                    })\r\n                })\r\n            })\r\n        }\r\n\r\n        this.rejectDelete = () => {\r\n            this.setState({ wantToDelete: false });\r\n        }\r\n\r\n        this.hideDeleteDialog = () => {\r\n            this.setState({ wantToDelete: false });\r\n        }\r\n\r\n        this.delete = (rowData, row) => {\r\n            this.setState({\r\n                wantToDelete: true,\r\n                rowDataToDelete: rowData\r\n            });\r\n        }\r\n\r\n        this.acceptPlaceOrder = () => {\r\n            let date = new Date();\r\n            let finalDate = \"\";\r\n            if (date.getDate() <= 9) {\r\n                finalDate += \"0\" + date.getDate() + \"-\";\r\n            }\r\n            else {\r\n                finalDate += date.getDate() + \"-\";\r\n            }\r\n            if ((date.getMonth() + 1) <= 9) {\r\n                finalDate += \"0\" + (date.getMonth() + 1) + \"-\";\r\n            }\r\n            else {\r\n                finalDate += date.getMonth() + \"-\";\r\n            }\r\n            finalDate += date.getFullYear();\r\n            let order = { pret: `${this.state.total}`, data: finalDate };\r\n            let ID = 0;\r\n            UserStore.addOrder(this.state.userEmail, order).then((response) => {\r\n                ID = response.ID;\r\n                for (let i = 0; i < this.state.finalProducts.length; i++) {\r\n                    let product = { nume: `${this.state.finalProducts[i].nume}`, cantitate: `${this.state.finalProducts[i].cantitate}` };\r\n                    UserStore.addOrderedProduct(this.state.userEmail, ID, product);\r\n                    ProductStore.getDayWeek(finalDate).then((dayOfWeek) => {\r\n                        if (dayOfWeek.message === \"not found\") {\r\n                            let newDay = { data: `${finalDate}` };\r\n                            ProductStore.addDayOfWeek(newDay);\r\n                            ProductStore.getDayWeekOrderedProduct(finalDate, this.state.finalProducts[i].nume).then((product) => {\r\n                                if (product.message === \"not found\") {\r\n                                    let newOrderedProduct = { nume: `${this.state.finalProducts[i].nume}`, cantitate: `${this.state.finalProducts[i].cantitate}` };\r\n                                    ProductStore.addDayWeekOrderedProduct(finalDate, newOrderedProduct);\r\n                                }\r\n                                else {\r\n                                    let quantity = product.cantitate;\r\n                                    quantity += this.state.finalProducts[i].cantitate;\r\n                                    let updatedOrderedProduct = { nume: `${this.state.finalProducts[i].nume}`, cantitate: quantity };\r\n                                    ProductStore.updateDayWeekOrderedProduct(finalDate, this.state.finalProducts[i].nume, updatedOrderedProduct);\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            let name = this.state.finalProducts[i].nume;\r\n                            let quantity = this.state.finalProducts[i].cantitate;\r\n                            ProductStore.getDayWeekOrderedProduct(finalDate, name).then((product) => {\r\n                                if (product.message === \"not found\") {\r\n                                    let newOrderedProduct = { nume: `${name}`, cantitate: `${quantity}` };\r\n                                    ProductStore.addDayWeekOrderedProduct(finalDate, newOrderedProduct);\r\n                                }\r\n                                else {\r\n                                    let newQuantity = product.cantitate;\r\n                                    newQuantity += quantity;\r\n                                    let updatedOrderedProduct = { nume: `${name}`, cantitate: newQuantity };\r\n                                    ProductStore.updateDayWeekOrderedProduct(finalDate, name, updatedOrderedProduct);\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n                UserStore.updateCartState(this.state.userEmail, \"in procesare\", { stare: \"procesat\" });\r\n                let newShoppingCart = { data: `${finalDate}` };\r\n                UserStore.addShoppingCart(this.state.userEmail, newShoppingCart);\r\n                this.setState({\r\n                    isPlacedOrder: true,\r\n                    ID: ID,\r\n                    wantToPlaceOrder: false\r\n                });\r\n                if (localStorage.getItem('isLoggedIn')) {\r\n                    this.setState({\r\n                        isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                        userEmail: localStorage.getItem('email')\r\n                    })\r\n                    UserStore.getProductsCart(localStorage.getItem('email'), 'in procesare').then((response) => {\r\n                        this.getFinalProducts(response).then(() => {\r\n                            let totalPrice = 0;\r\n                            for (let i = 0; i < response.length; i++) {\r\n                                totalPrice += response[i].subtotal;\r\n                            }\r\n                            this.setState({\r\n                                finalProducts: response,\r\n                                total: totalPrice\r\n                            })\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.rejectPlaceOrder = () => {\r\n            this.setState({ wantToPlaceOrder: false });\r\n        }\r\n\r\n        this.hidePlaceOrderDialog = () => {\r\n            this.setState({ wantToPlaceOrder: false });\r\n        }\r\n\r\n        this.placeOrder = () => {\r\n            this.setState({ wantToPlaceOrder: true });\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            if (this.state.loginEmail === \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.loginParola === \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let ok = false;\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.loginEmail && response[i].parola === this.state.loginParola) {\r\n                            this.setState({ isLoggedIn: true })\r\n                            localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                            localStorage.setItem('email', this.state.loginEmail);\r\n                            ok = true;\r\n                            if (localStorage.getItem('isLoggedIn')) {\r\n                                this.setState({\r\n                                    isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                                    userEmail: localStorage.getItem('email')\r\n                                })\r\n                                UserStore.getProductsCart(localStorage.getItem('email'), 'in procesare').then((response) => {\r\n                                    this.getFinalProducts(response).then(() => {\r\n                                        let totalPrice = 0;\r\n                                        for (let i = 0; i < response.length; i++) {\r\n                                            totalPrice += response[i].subtotal;\r\n                                        }\r\n                                        if (response.message === \"not found\") {\r\n                                            this.setState({\r\n                                                finalProducts: [],\r\n                                                total: totalPrice\r\n                                            })\r\n                                        }\r\n                                        else {\r\n                                            this.setState({\r\n                                                finalProducts: response,\r\n                                                total: totalPrice\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        }\r\n                        else if (response[i].email === this.state.loginEmail && response[i].parola !== this.state.loginParola) {\r\n                            toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = true;\r\n                        }\r\n                    }\r\n                    if (ok === false) {\r\n                        toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        this.openLoginDialog = () => {\r\n            this.setState({ openLoginDialog: true });\r\n        }\r\n\r\n        this.hideDialog = () => {\r\n            this.setState({ openLoginDialog: false });\r\n        }\r\n    }\r\n\r\n    async getFinalProducts(products) {\r\n        let totalPrice = 0;\r\n        for (let i = 0; i < products.length; i++) {\r\n            await ProductStore.getProduct(products[i].nume).then((product) => {\r\n                products[i].descriere = product.descriere;\r\n                products[i].pret = product.pret;\r\n                products[i].subtotal = products[i].cantitate * product.pret;\r\n                totalPrice += products[i].subtotal;\r\n            })\r\n        }\r\n        this.setState({ total: totalPrice })\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({\r\n                isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                userEmail: localStorage.getItem('email')\r\n            })\r\n            UserStore.getProductsCart(localStorage.getItem('email'), 'in procesare').then((response) => {\r\n                this.getFinalProducts(response).then(() => {\r\n                    let totalPrice = 0;\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        totalPrice += response[i].subtotal;\r\n                    }\r\n                    if (response.message === \"not found\") {\r\n                        this.setState({\r\n                            finalProducts: [],\r\n                            total: totalPrice\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            finalProducts: response,\r\n                            total: totalPrice\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.isLoggedIn ?\r\n                    <>\r\n                        {(this.state.finalProducts.length === 0) ?\r\n                            <div><Navbar searchBar={true} />\r\n                                <h2 style={{ color: \"rgb(140, 35, 158)\" }} className=\"centerCartMessage\">\r\n                                    Cosul de cumparaturi este gol\r\n                                </h2>\r\n                                <Link className=\"centerCartMessage\" to=\"/meniu\" style={{ color: \"rgb(140, 35, 158)\" }}>Vizualizeaza meniul</Link>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                {this.state.isPlacedOrder ?\r\n                                    <>\r\n                                        <Navbar searchBar={true} />\r\n                                        <h2 style={{ color: \"rgb(140, 35, 158)\" }} className=\"centerCartMessage\">\r\n                                            Comanda a fost plasata cu succes!\r\n                                        </h2>\r\n                                        <div style={{ color: \"rgb(140, 35, 158)\", marginLeft: \"4vw\", marginRight: \"4vw\" }}>Pentru a vedea detalii despre comanda:\r\n                                            <Link to=\"/profil\"\r\n                                                style={{ color: \"rgb(140, 35, 158)\" }}>cautati pe profil</Link>  comanda cu numarul {this.state.ID} sau <Link\r\n                                                    style={{ color: \"rgb(140, 35, 158)\" }} to=\"/meniu\">continuati cumparaturile</Link></div>\r\n                                    </>\r\n                                    :\r\n                                    <div>\r\n                                        <Navbar searchBar={true} />\r\n                                        <div className=\"cartContainer\">\r\n                                            <DataTable className=\"cartTable\" value={this.state.finalProducts} header=\"Cos de cumparaturi\">\r\n                                                <Column className=\"productColumn\" style={{ textAlign: \"center\" }} header=\"Produs\" body={this.productBody} />\r\n                                                <Column className=\"quantityColumn\" style={{ textAlign: \"center\" }} header=\"Cantitate\" body={this.quantityBody} />\r\n                                                <Column className=\"deleteColumn\" style={{ textAlign: \"center\" }} body={this.deleteBody} />\r\n                                            </DataTable>\r\n                                            <div className=\"totalPriceContainer\">\r\n                                                <div className=\"totalPrice\">{this.state.total} lei</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"centerCartButton\">\r\n                                            <Button className=\"p-button-rounded\" onClick={this.placeOrder}>Plaseaza comanda</Button>\r\n                                        </div>\r\n                                        <ConfirmDialog visible={this.state.wantToDelete} onHide={this.hideDeleteDialog} header=\"Stergere produs\"\r\n                                            message=\"Sunteti sigur ca vreti sa stergeti produsul?\" icon=\"pi pi-exclamation-triangle\"\r\n                                            accept={this.acceptDelete} reject={this.rejectDelete} />\r\n                                        <ConfirmDialog visible={this.state.wantToPlaceOrder} onHide={this.hidePlaceOrderDialog} header=\"Plasare comanda\"\r\n                                            message=\"Sunteti sigur ca vreti sa plasati comanda?\" icon=\"pi pi-exclamation-triangle\"\r\n                                            accept={this.acceptPlaceOrder} reject={this.rejectPlaceOrder} />\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Navbar searchBar={true} />\r\n                        <div className=\"centerCartMessage\" style={{ color: \"rgb(140, 35, 158)\", textDecoration: \"underline\" }}>\r\n                            <h2 onClick={this.openLoginDialog}>Conecteaza-te pentru a vedea cosul de cumparaturi</h2>\r\n                        </div>\r\n                    </>\r\n                }\r\n                <Dialog header=\"Nu esti conectat\" visible={this.state.openLoginDialog} onHide={this.hideDialog} className='p-fluid'>\r\n                    <>{this.state.isLoggedIn ?\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                            Ati fost conectat cu succes!\r\n                        </h2>\r\n                        :\r\n                        < div >\r\n                            <div className=\"login\">\r\n                                <h2 className=\"title\">Intra in cont</h2>\r\n                                <div className=\"boxLogin\">\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Email\" >Email</label>\r\n                                        <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.loginEmail} onChange={(evt) => this.setState({ loginEmail: evt.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Parola\" >Parola</label>\r\n                                        <Password className=\"inputTextLogin\" type=\"text\" value={this.state.loginParola} onChange={(evt) => this.setState({ loginParola: evt.target.value })} feedback={false} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"centerLogin\">\r\n                                <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    </>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport Home from './Home';\r\nimport './Login.css';\r\nimport Navbar from './NavbarComp';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Password } from 'primereact/password';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            parola: '',\r\n            isLoggedIn: false\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            if (this.state.email === \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.parola === \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let ok = false;\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.email && response[i].parola === this.state.parola) {\r\n                            this.setState({ isLoggedIn: true })\r\n                            localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                            localStorage.setItem('email', this.state.email);\r\n                            ok = true;\r\n                            toast('Ati fost conectat cu succes!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                        }\r\n                        else if (response[i].email === this.state.email && response[i].parola !== this.state.parola) {\r\n                            toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = true;\r\n                        }\r\n                    }\r\n                    if (ok === false) {\r\n                        toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>{(this.state.isLoggedIn) ?\r\n                <>{this.props.loginFromAnotherComponent ?\r\n                    <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                        Ati fost conectat cu succes!\r\n                    </h2>\r\n                    :\r\n                    <Home />\r\n                }\r\n                </>\r\n                :\r\n                <>{this.props.loginFromAnotherComponent ?\r\n                    < div >\r\n                        <div className=\"login\">\r\n                            <h2 className=\"title\">Intra in cont</h2>\r\n                            <div className=\"boxLogin\">\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Email\" >Email</label>\r\n                                    <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.email} onChange={(evt) => this.setState({ email: evt.target.value })} />\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Parola\" >Parola</label>\r\n                                    <Password className=\"inputTextLogin\" type=\"text\" value={this.state.parola} onChange={(evt) => this.setState({ parola: evt.target.value })} feedback={false} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"centerLogin\">\r\n                            <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div >\r\n                        <Navbar searchBar={true} />\r\n                        <div>\r\n                            <h2 className=\"title\">Intra in cont</h2>\r\n                            <div className=\"boxLogin\">\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Email\" >Email</label>\r\n                                    <InputText type=\"text\" value={this.state.email} onChange={(evt) => this.setState({ email: evt.target.value })} />\r\n                                </div>\r\n                                <div className=\"email\">\r\n                                    <label htmlFor=\"Parola\" >Parola</label>\r\n                                    <Password type=\"text\" value={this.state.parola} onChange={(evt) => this.setState({ parola: evt.target.value })} feedback={false} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"centerLogin\">\r\n                            <Button style={{ marginTop: '2vh' }} className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                        </div>\r\n                        <div className=\"centerLogin\">\r\n                            <Link className=\"registrationLink\" to=\"/inregistrare\" >Inregistrare</Link>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                </>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n// import style from './index.module.scss';\r\nimport './RegisterStyle.css';\r\nimport Login from './Login';\r\nimport Navbar from './NavbarComp';\r\nimport UserStore from './UserStore';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nume: '',\r\n            prenume: '',\r\n            email: '',\r\n            parola: '',\r\n            judet: '',\r\n            localitate: '',\r\n            strada: '',\r\n            etaj: '',\r\n            apartament: '',\r\n            telefon: '',\r\n            isRegistered: false\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            let ok = 0;\r\n            if (this.state.nume == \"\") {\r\n                OK = false;\r\n                toast('Numele trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.prenume == \"\") {\r\n                OK = false;\r\n                toast('Prenumele trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.email == \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.parola == \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.telefon == \"\") {\r\n                OK = false;\r\n                toast('Telefonul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.email) {\r\n                            toast('Email-ul este deja inregistrat!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = 1;\r\n                        }\r\n                    }\r\n                    if (ok === 0) {\r\n                        UserStore.addUser(this.state);\r\n                        toast('Ati fost inregistrat cu succes!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                    if (OK === true && ok === 0) {\r\n                        this.setState({ isRegistered: true })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isRegistered ?\r\n                <Login />\r\n                :\r\n                <div>\r\n                    <Navbar />\r\n                    <h2 className=\"title\">Inregistrare</h2>\r\n                    <div className=\"box\">\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Nume\">Nume*</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.nume} onChange={(evt) => this.setState({ nume: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Prenume\">Prenume*</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.prenume} onChange={(evt) => this.setState({ prenume: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Email\">Email*</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.email} onChange={(evt) => this.setState({ email: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Parola\">Parola*</label>\r\n                            <Password type=\"text\" className=\"tools\" value={this.state.parola} onChange={(evt) => this.setState({ parola: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Judet\">Judet</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.judet} onChange={(evt) => this.setState({ judet: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Localitate\">Localitate</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.localitate} onChange={(evt) => this.setState({ localitate: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Strada\">Strada</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.strada} onChange={(evt) => this.setState({ strada: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Etaj\">Etaj</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.etaj} onChange={(evt) => this.setState({ etaj: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Apartament\">Apartament</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.apartament} onChange={(evt) => this.setState({ apartament: evt.target.value })} />\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <label htmlFor=\"Telefon\">Telefon*</label>\r\n                            <InputText type=\"text\" className=\"tools\" value={this.state.telefon} onChange={(evt) => this.setState({ telefon: evt.target.value })} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"containerButton\">\r\n                        <Button className=\"submitRegistration\" onClick={this.Submit} label=\"Creeaza cont\" />\r\n                        <span className=\"linkToLogin\">\r\n                            <p style={{ marginBottom: '-0.5vh', marginTop: '-1vh' }}>Ai cont?</p>\r\n                            <Link style={{ color: 'rgb(140, 35, 158)', marginBottom: '3vh' }} to='/logare'>Intra in cont</Link>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\n\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        ProductStore.getProducts().then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                this.setState({ products: response });\r\n            })\r\n        });\r\n    }\r\n\r\n    refreshState = () => {\r\n        ProductStore.getProducts().then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                this.setState({ products: response });\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"products\">\r\n                    {\r\n                        this.state.products.map((e, index) => <Product key={index} productData={e} isOk={true} refresh={this.refreshState} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport './Products.css';\r\n\r\nclass SoupProducts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let productsFromDatabase = [];\r\n        ProductStore.getProductsByType(\"supe_ciorbe\").then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                productsFromDatabase = response;\r\n                this.setState({ products: productsFromDatabase });\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"products\">\r\n                    {\r\n                        this.state.products.map((e, index) => <Product key={index} productData={e} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SoupProducts;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Password } from 'primereact/password';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass TablesMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tables: [],\r\n            isLoggedIn: false,\r\n            userEmail: '',\r\n            openLoginDialog: false,\r\n            loginEmail: '',\r\n            loginParola: ''\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            if (this.state.loginEmail === \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.loginParola === \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let ok = false;\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.loginEmail && response[i].parola === this.state.loginParola) {\r\n                            this.setState({ isLoggedIn: true })\r\n                            localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                            localStorage.setItem('email', this.state.loginEmail);\r\n                            ok = true;\r\n                        }\r\n                        else if (response[i].email === this.state.loginEmail && response[i].parola !== this.state.loginParola) {\r\n                            toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = true;\r\n                        }\r\n                    }\r\n                    if (ok === false) {\r\n                        toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        this.updateTableStates = () => {\r\n            ProductStore.getTables().then(tables => {\r\n                let newTables = tables;\r\n                for (let i = 0; i < tables.length; i++) {\r\n                    let date = new Date();\r\n                    let finalDate = \"\";\r\n                    if (date.getDate() <= 9) {\r\n                        finalDate += \"0\" + date.getDate() + \"-\";\r\n                    }\r\n                    else {\r\n                        finalDate += date.getDate() + \"-\";\r\n                    }\r\n                    if ((date.getMonth() + 1) <= 9) {\r\n                        finalDate += \"0\" + (date.getMonth() + 1) + \"-\";\r\n                    }\r\n                    else {\r\n                        finalDate += date.getMonth() + \"-\";\r\n                    }\r\n                    finalDate += date.getFullYear();\r\n                    ProductStore.getTableDate(tables[i].numar, finalDate).then((tableDate) => {\r\n                        if (tableDate.message === \"not found\") {\r\n                            let newTableDate = { data: finalDate };\r\n                            ProductStore.addTableDate(tables[i].numar, newTableDate);\r\n                            newTables[i].tableState = \"libera\";\r\n                            this.setState({ tables: newTables });\r\n                        }\r\n                        else {\r\n                            let currentHour = date.getHours();\r\n                            let date1 = new Date();\r\n                            date1.setMinutes(date.getMinutes() + 30);\r\n                            let hour1 = date1.getHours();\r\n                            let hourForSearch = '';\r\n                            let endHour = '';\r\n                            if (hour1 === currentHour) {\r\n                                hourForSearch = currentHour + \":00\";\r\n                                endHour = currentHour + \":30\";\r\n                                this.getTableHour(tables[i].numar, finalDate, hourForSearch).then((tableHour) => {\r\n                                    if (tableHour.message === \"not found\") {\r\n                                        newTables[i].tableState = \"libera\";\r\n                                        this.setState({ tables: newTables });\r\n                                    }\r\n                                    else {\r\n                                        if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"ocupata\") {\r\n                                            newTables[i].tableState = \"ocupata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"rezervata\") {\r\n                                            newTables[i].tableState = \"rezervata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else {\r\n                                            newTables[i].tableState = \"libera\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                            else {\r\n                                hourForSearch = currentHour + \":30\";\r\n                                endHour = (currentHour + 1) + \":00\";\r\n                                this.getTableHour(tables[i].numar, finalDate, hourForSearch).then((tableHour) => {\r\n                                    if (tableHour.message === \"not found\") {\r\n                                        newTables[i].tableState = \"libera\";\r\n                                        this.setState({ tables: newTables });\r\n                                    }\r\n                                    else {\r\n                                        if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"ocupata\") {\r\n                                            newTables[i].tableState = \"ocupata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"rezervata\") {\r\n                                            newTables[i].tableState = \"rezervata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else {\r\n                                            newTables[i].tableState = \"libera\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n        this.openLoginDialog = () => {\r\n            this.setState({ openLoginDialog: true });\r\n        }\r\n\r\n        this.hideDialog = () => {\r\n            this.setState({ openLoginDialog: false });\r\n        }\r\n    }\r\n\r\n    async getIsLoggedIn() {\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            await this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n        }\r\n    }\r\n\r\n    async getTableHour(tableNumber, tableDate, tableHour) {\r\n        const response = await ProductStore.getTableHour(tableNumber, tableDate, tableHour);\r\n        return response;\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n        }\r\n        this.updateTableStates();\r\n        setInterval(this.updateTableStates, 15000);\r\n    }\r\n\r\n    render() {\r\n        const hours = [{ name: \"09:00\" }, { name: \"09:30\" }, { name: \"10:00\" }, { name: \"10:30\" }, { name: \"11:00\" }, { name: \"11:30\" }, { name: \"12:00\" },\r\n        { name: \"12:30\" }, { name: \"13:00\" }, { name: \"13:30\" }, { name: \"14:00\" }, { name: \"14:30\" }, { name: \"15:00\" }, { name: \"15:30\" }, { name: \"16:00\" },\r\n        { name: \"16:30\" }, { name: \"17:00\" }, { name: \"17:30\" }, { name: \"18:00\" }, { name: \"18:30\" }, { name: \"19:00\" }, { name: \"19:30\" }, { name: \"20:00\" },\r\n        { name: \"20:30\" }];\r\n        return (\r\n            <>{this.state.isLoggedIn ?\r\n                <div>\r\n                    <Navbar searchBar={true} />\r\n                    <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\", marginLeft: \"3vw\" }} className=\"centerCartMessage\">\r\n                        Click pe o masa pentru a o rezerva\r\n                    </h2>\r\n                    <div className=\"checkAvailabilityButton\">\r\n                        <Button style={{ marginLeft: \"3vw\" }}>\r\n                            <Link to=\"/verificare_disponibilitate_mese\" style={{ color: \"white\", textDecoration: \"none\" }}>Verificati disponibilitatea meselor\r\n                            </Link>\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"tablesContainer\">\r\n                        {this.state.tables.map((table, index) =>\r\n                            <Link to={{\r\n                                pathname: `/rezervare/masa${table.numar}`,\r\n                                data: table,\r\n                                isLoggedIn: this.state.isLoggedIn,\r\n                                userEmail: this.state.userEmail\r\n                            }}>\r\n                                <>{this.state.tables[index].tableState === \"ocupata\" ?\r\n                                    <i className=\"table fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(216, 31, 42)\" }}>\r\n                                        <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                    </i>\r\n                                    :\r\n                                    <>{this.state.tables[index].tableState === \"rezervata\" ?\r\n                                        <i className=\"table fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(253, 208, 23)\" }}>\r\n                                            <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                        </i>\r\n                                        :\r\n                                        <>{this.state.tables[index].tableState === \"libera\" ?\r\n                                            <i className=\"table fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"green\" }}>\r\n                                                <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                            </i>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        </>\r\n                                    }\r\n                                    </>\r\n                                }\r\n                                </>\r\n                            </Link>)}\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <Navbar searchBar={true} />\r\n                    <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\", marginLeft: \"3vw\" }} className=\"centerCartMessage\">\r\n                        Click pe o masa pentru a o rezerva\r\n                    </h2>\r\n                    <div className=\"checkAvailabilityButton\">\r\n                        <Button style={{ marginLeft: \"3vw\" }}>\r\n                            <Link to=\"/verificare_disponibilitate_mese\" style={{ color: \"white\", textDecoration: \"none\" }}>Verificati disponibilitatea meselor\r\n                            </Link>\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"tablesContainer\">\r\n                        {this.state.tables.map((table, index) =>\r\n                            <>{this.state.tables[index].tableState === \"ocupata\" ?\r\n                                <i className=\"fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(216, 31, 42)\" }}\r\n                                    onClick={this.openLoginDialog}>\r\n                                    <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                </i>\r\n                                :\r\n                                <>{this.state.tables[index].tableState === \"rezervata\" ?\r\n                                    <i className=\"fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(253, 208, 23)\" }}\r\n                                        onClick={this.openLoginDialog}>\r\n                                        <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                    </i>\r\n                                    :\r\n                                    <>{this.state.tables[index].tableState === \"libera\" ?\r\n                                        <i className=\"fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"green\" }}\r\n                                            onClick={this.openLoginDialog}>\r\n                                            <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                        </i>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    </>\r\n                                }\r\n                                </>\r\n                            }\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <Dialog header=\"Nu esti conectat\" visible={this.state.openLoginDialog} onHide={this.hideDialog} className='p-fluid'>\r\n                        <>{this.state.isLoggedIn ?\r\n                            <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                                Ati fost conectat cu succes!\r\n                            </h2>\r\n                            :\r\n                            < div >\r\n                                <div className=\"login\">\r\n                                    <h2 className=\"title\">Intra in cont</h2>\r\n                                    <div className=\"boxLogin\">\r\n                                        <div className=\"email\">\r\n                                            <label htmlFor=\"Email\" >Email</label>\r\n                                            <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.loginEmail} onChange={(evt) => this.setState({ loginEmail: evt.target.value })} />\r\n                                        </div>\r\n                                        <div className=\"email\">\r\n                                            <label htmlFor=\"Parola\" >Parola</label>\r\n                                            <Password className=\"inputTextLogin\" type=\"text\" value={this.state.loginParola} onChange={(evt) => this.setState({ loginParola: evt.target.value })} feedback={false} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"centerLogin\">\r\n                                    <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        </>\r\n                    </Dialog>\r\n                </div>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TablesMap;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass TableReservations extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            startDate: '',\r\n            selectedStartHour: '',\r\n            selectedEndHour: '',\r\n            tablesHours: [],\r\n            userEmail: ''\r\n        }\r\n\r\n        this.reserve = () => {\r\n            let finalDate = \"\";\r\n            if (this.state.startDate.getDate() <= 9) {\r\n                finalDate += \"0\" + this.state.startDate.getDate() + \"-\";\r\n            }\r\n            else {\r\n                finalDate += this.state.startDate.getDate() + \"-\";\r\n            }\r\n            if ((this.state.startDate.getMonth() + 1) <= 9) {\r\n                finalDate += \"0\" + (this.state.startDate.getMonth() + 1) + \"-\";\r\n            }\r\n            else {\r\n                finalDate += this.state.startDate.getMonth() + \"-\";\r\n            }\r\n            finalDate += this.state.startDate.getFullYear();\r\n            ProductStore.getTableDate(this.props.location.data.numar, finalDate).then((tableDate) => {\r\n                if (tableDate.message === \"not found\") {\r\n                    let newDate = { data: finalDate };\r\n                    ProductStore.addTableDate(this.props.location.data.numar, newDate);\r\n                    ProductStore.getTableHour(this.props.location.data.numar, this.state.startDate, this.state.selectedStartHour).then((tableHour) => {\r\n                        if (tableHour.message === \"not found\") {\r\n                            if (this.state.selectedStartHour.name.split(\":\")[0] > this.state.selectedEndHour.name.split(\":\")[0]) {\r\n                                toast('Ora de incepere trebuie sa fie mai mica decat cea de terminare!', {\r\n                                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                                })\r\n                            }\r\n                            if ((this.state.selectedStartHour.name.split(\":\")[0] === this.state.selectedEndHour.name.split(\":\")[0]) &&\r\n                                (this.state.selectedStartHour.name.split(\":\")[1] > this.state.selectedEndHour.name.split(\":\")[1])) {\r\n                                toast('Ora de incepere trebuie sa fie mai mica decat cea de terminare!', {\r\n                                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                                })\r\n                            }\r\n                            if ((this.state.selectedStartHour.name.split(\":\")[0] < this.state.selectedEndHour.name.split(\":\")[0]) ||\r\n                                ((this.state.selectedStartHour.name.split(\":\")[0] === this.state.selectedEndHour.name.split(\":\")[0]) &&\r\n                                    (this.state.selectedStartHour.name.split(\":\")[1] < this.state.selectedEndHour.name.split(\":\")[1]))) {\r\n                                let reservation = {\r\n                                    data: finalDate, oraIncepere: this.state.selectedStartHour.name, oraTerminare: this.state.selectedEndHour.name,\r\n                                    numarMasa: this.props.location.data.numar\r\n                                };\r\n                                let newTableHour = { oraIncepere: this.state.selectedStartHour.name, oraTerminare: this.state.selectedEndHour.name, stare: \"rezervata\" };\r\n                                ProductStore.addTableHour(this.props.location.data.numar, finalDate, newTableHour);\r\n                                UserStore.addReservation(this.state.userEmail, reservation);\r\n                                toast('Rezervarea a fost acceptata!', {\r\n                                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    ProductStore.getTableHour(this.props.location.data.numar, this.state.startDate, this.state.selectedStartHour).then((tableHour) => {\r\n                        if (tableHour.message === \"not found\") {\r\n                            if (this.state.selectedStartHour.name.split(\":\")[0] > this.state.selectedEndHour.name.split(\":\")[0]) {\r\n                                toast('Ora de incepere trebuie sa fie mai mica decat cea de terminare!', {\r\n                                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                                })\r\n                            }\r\n                            if ((this.state.selectedStartHour.name.split(\":\")[0] === this.state.selectedEndHour.name.split(\":\")[0]) &&\r\n                                (this.state.selectedStartHour.name.split(\":\")[1] > this.state.selectedEndHour.name.split(\":\")[1])) {\r\n                                toast('Ora de incepere trebuie sa fie mai mica decat cea de terminare!', {\r\n                                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                                })\r\n                            }\r\n                            if ((this.state.selectedStartHour.name.split(\":\")[0] < this.state.selectedEndHour.name.split(\":\")[0]) ||\r\n                                ((this.state.selectedStartHour.name.split(\":\")[0] === this.state.selectedEndHour.name.split(\":\")[0]) &&\r\n                                    (this.state.selectedStartHour.name.split(\":\")[1] < this.state.selectedEndHour.name.split(\":\")[1]))) {\r\n                                let reservation = {\r\n                                    data: finalDate, oraIncepere: this.state.selectedStartHour.name, oraTerminare: this.state.selectedEndHour.name,\r\n                                    numarMasa: this.props.location.data.numar\r\n                                };\r\n                                let newTableHour = { oraIncepere: this.state.selectedStartHour.name, oraTerminare: this.state.selectedEndHour.name, stare: \"rezervata\" };\r\n                                ProductStore.addTableHour(this.props.location.data.numar, finalDate, newTableHour);\r\n                                UserStore.addReservation(this.state.userEmail, reservation);\r\n                                toast('Rezervarea a fost acceptata!', {\r\n                                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                                })\r\n                            }\r\n                        }\r\n                        else {\r\n                            toast('Orele selectate nu sunt disponibile', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        this.goBack = () => {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (localStorage.getItem('email')) {\r\n            this.setState({ userEmail: localStorage.getItem('email') });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const hours = [{ name: \"09:00\" }, { name: \"09:30\" }, { name: \"10:00\" }, { name: \"10:30\" }, { name: \"11:00\" }, { name: \"11:30\" }, { name: \"12:00\" },\r\n        { name: \"12:30\" }, { name: \"13:00\" }, { name: \"13:30\" }, { name: \"14:00\" }, { name: \"14:30\" }, { name: \"15:00\" }, { name: \"15:30\" }, { name: \"16:00\" },\r\n        { name: \"16:30\" }, { name: \"17:00\" }, { name: \"17:30\" }, { name: \"18:00\" }, { name: \"18:30\" }, { name: \"19:00\" }, { name: \"19:30\" }, { name: \"20:00\" },\r\n        { name: \"20:30\" }];\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div >\r\n                    <>{this.props.location.data.tableState === \"ocupata\" ?\r\n                        <i className=\"fas fa-table fa-10x\" id={`table${this.props.location.data.numar}`} style={{ color: \"rgb(216, 31, 42)\", textAlign: \"center\" }}>\r\n                            <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${this.props.location.data.numar}`}</div>\r\n                        </i>\r\n                        :\r\n                        <>{this.props.location.data.tableState === \"rezervata\" ?\r\n                            <i className=\"fas fa-table fa-10x\" id={`table${this.props.location.data.numar}`} style={{ color: \"rgb(253, 208, 23)\", textAlign: \"center\" }}>\r\n                                <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${this.props.location.data.numar}`}</div>\r\n                            </i>\r\n                            :\r\n                            <>{this.props.location.data.tableState === \"libera\" ?\r\n                                <i className=\"fas fa-table fa-10x\" id={`table${this.props.location.data.numar}`} style={{ color: \"green\", textAlign: \"center\" }}>\r\n                                    <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${this.props.location.data.numar}`}</div>\r\n                                </i>\r\n                                :\r\n                                null\r\n                            }\r\n                            </>\r\n                        }\r\n                        </>\r\n                    }\r\n                    </>\r\n                </div>\r\n                <div className=\"tableReservationContainer\">\r\n                    <div>Rezerva masa {this.props.match.params.numar}</div>\r\n                    <div style={{ marginLeft: \"8vw\", marginTop: \"3vh\" }}>Data</div>\r\n                    <Calendar style={{ marginTop: \"1vh\" }} value={this.state.startDate} onChange={(e) => this.setState({ startDate: e.value })}\r\n                        dateFormat=\"dd/mm/yy\" showIcon monthNavigator yearNavigator yearRange=\"2021:2030\" />\r\n                    <div style={{ marginLeft: \"8vw\" }}>Ora incepere</div>\r\n                    <Dropdown value={this.state.selectedStartHour} options={hours} onChange={(e) => this.setState({ selectedStartHour: e.value })}\r\n                        optionLabel=\"name\" placeholder=\"Selectati ora\" style={{ width: \"76vw\" }} />\r\n                    <div style={{ marginLeft: \"8vw\" }}>Ora terminare</div>\r\n                    <Dropdown value={this.state.selectedEndHour} options={hours} onChange={(e) => this.setState({ selectedEndHour: e.value })}\r\n                        optionLabel=\"name\" placeholder=\"Selectati ora\" style={{ width: \"76vw\" }} />\r\n                </div>\r\n                <div className=\"reserveButton\">\r\n                    <Button style={{ marginTop: \"2vh\" }} onClick={this.reserve}>Rezerva</Button>\r\n                </div>\r\n                <Button label=\"Inapoi\" icon=\"pi pi-chevron-left\" onClick={this.goBack} className=\"p-button-raised p-button-text\"\r\n                    style={{ position: \"fixed\", bottom: \"0\", left: \"0\" }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableReservations;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Button } from 'primereact/button';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass TablesMapAvailability extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tables: [],\r\n            startDate: '',\r\n            selectedStartHour: '',\r\n            selectedEndHour: '',\r\n            isLoggedIn: false,\r\n            userEmail: '',\r\n            loginEmail: '',\r\n            loginParola: '',\r\n            openLoginDialog: false\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            if (this.state.email == \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.parola == \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let ok = false;\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.loginEmail && response[i].parola === this.state.loginParola) {\r\n                            this.setState({ isLoggedIn: true })\r\n                            localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                            localStorage.setItem('email', this.state.loginEmail);\r\n                            ok = true;\r\n                        }\r\n                        else if (response[i].email === this.state.loginEmail && response[i].parola !== this.state.loginParola) {\r\n                            toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = true;\r\n                        }\r\n                    }\r\n                    if (ok === false) {\r\n                        toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        this.checkAvailability = () => {\r\n            if (this.state.startDate && this.state.selectedStartHour && this.state.selectedEndHour) {\r\n                ProductStore.getTables().then(tables => {\r\n                    let newTables = tables;\r\n                    for (let i = 0; i < tables.length; i++) {\r\n                        let finalDate = \"\";\r\n                        if (this.state.startDate.getDate() <= 9) {\r\n                            finalDate += \"0\" + this.state.startDate.getDate() + \"-\";\r\n                        }\r\n                        else {\r\n                            finalDate += this.state.startDate.getDate() + \"-\";\r\n                        }\r\n                        if ((this.state.startDate.getMonth() + 1) <= 9) {\r\n                            finalDate += \"0\" + (this.state.startDate.getMonth() + 1) + \"-\";\r\n                        }\r\n                        else {\r\n                            finalDate += this.state.startDate.getMonth() + \"-\";\r\n                        }\r\n                        finalDate += this.state.startDate.getFullYear();\r\n                        ProductStore.getTableDate(tables[i].numar, finalDate).then((tableDate) => {\r\n                            if (tableDate.message === \"not found\") {\r\n                                let newTableDate = { data: finalDate };\r\n                                ProductStore.addTableDate(tables[i].numar, newTableDate);\r\n                                newTables[i].tableState = \"libera\";\r\n                                this.setState({ tables: newTables });\r\n                            }\r\n                            else {\r\n                                this.getTableHour(tables[i].numar, finalDate, this.state.selectedStartHour.name).then((tableHour) => {\r\n                                    if (tableHour.oraIncepere === this.state.selectedStartHour.name && tableHour.stare === \"ocupata\") {\r\n                                        newTables[i].tableState = \"ocupata\";\r\n                                        this.setState({ tables: newTables });\r\n                                    }\r\n                                    else if (tableHour.oraIncepere === this.state.selectedStartHour.name && tableHour.stare === \"rezervata\") {\r\n                                        newTables[i].tableState = \"rezervata\";\r\n                                        this.setState({ tables: newTables });\r\n                                    }\r\n                                    else {\r\n                                        newTables[i].tableState = \"libera\";\r\n                                        this.setState({ tables: newTables });\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.startDate === \"\") {\r\n                toast('Data trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.selectedStartHour === \"\") {\r\n                toast('Ora de incepere trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.selectedEndHour === \"\") {\r\n                toast('Ora de terminare trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n        }\r\n\r\n        this.updateTableStates = () => {\r\n            ProductStore.getTables().then(tables => {\r\n                let newTables = tables;\r\n                for (let i = 0; i < tables.length; i++) {\r\n                    let date = new Date();\r\n                    let finalDate = \"\";\r\n                    if (date.getDate() <= 9) {\r\n                        finalDate += \"0\" + date.getDate() + \"-\";\r\n                    }\r\n                    else {\r\n                        finalDate += date.getDate() + \"-\";\r\n                    }\r\n                    if ((date.getMonth() + 1) <= 9) {\r\n                        finalDate += \"0\" + (date.getMonth() + 1) + \"-\";\r\n                    }\r\n                    else {\r\n                        finalDate += date.getMonth() + \"-\";\r\n                    }\r\n                    finalDate += date.getFullYear();\r\n                    ProductStore.getTableDate(tables[i].numar, finalDate).then((tableDate) => {\r\n                        if (tableDate.message === \"not found\") {\r\n                            let newTableDate = { data: finalDate };\r\n                            ProductStore.addTableDate(tables[i].numar, newTableDate);\r\n                            newTables[i].tableState = \"libera\";\r\n                            this.setState({ tables: newTables });\r\n                        }\r\n                        else {\r\n                            // let dailyHours = [\"09:00\", \"09:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"12:30\", \"13:00\", \"13:30\", \"14:00\",\r\n                            // \"14:30\", \"15:00\", \"15:30\", \"16:00\", \"16:30\", \"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\"];\r\n                            let currentHour = date.getHours();\r\n                            let date1 = new Date();\r\n                            date1.setMinutes(date.getMinutes() + 30);\r\n                            let hour1 = date1.getHours();\r\n                            let hourForSearch = '';\r\n                            let endHour = '';\r\n                            if (hour1 === currentHour) {\r\n                                hourForSearch = currentHour + \":00\";\r\n                                endHour = currentHour + \":30\";\r\n                                this.getTableHour(tables[i].numar, finalDate, hourForSearch).then((tableHour) => {\r\n                                    if (tableHour.message === \"not found\") {\r\n                                        newTables[i].tableState = \"libera\";\r\n                                        this.setState({ tables: newTables });\r\n                                    }\r\n                                    else {\r\n                                        if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"ocupata\") {\r\n                                            newTables[i].tableState = \"ocupata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"rezervata\") {\r\n                                            newTables[i].tableState = \"rezervata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else {\r\n                                            newTables[i].tableState = \"libera\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                            else {\r\n                                hourForSearch = currentHour + \":30\";\r\n                                endHour = (currentHour + 1) + \":00\";\r\n                                this.getTableHour(tables[i].numar, finalDate, hourForSearch).then((tableHour) => {\r\n                                    if (tableHour.message === \"not found\") {\r\n                                        newTables[i].tableState = \"libera\";\r\n                                        this.setState({ tables: newTables });\r\n                                    }\r\n                                    else {\r\n                                        if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"ocupata\") {\r\n                                            newTables[i].tableState = \"ocupata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else if (tableHour.oraIncepere === hourForSearch && tableHour.stare === \"rezervata\") {\r\n                                            newTables[i].tableState = \"rezervata\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                        else {\r\n                                            newTables[i].tableState = \"libera\";\r\n                                            this.setState({ tables: newTables });\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n        this.openLoginDialog = () => {\r\n            this.setState({ openLoginDialog: true });\r\n        }\r\n\r\n        this.hideDialog = () => {\r\n            this.setState({ openLoginDialog: false });\r\n        }\r\n    }\r\n\r\n    async getTableHour(tableNumber, tableDate, tableHour) {\r\n        const response = await ProductStore.getTableHour(tableNumber, tableDate, tableHour);\r\n        return response;\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.updateTableStates();\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const hours = [{ name: \"09:00\" }, { name: \"09:30\" }, { name: \"10:00\" }, { name: \"10:30\" }, { name: \"11:00\" }, { name: \"11:30\" }, { name: \"12:00\" },\r\n        { name: \"12:30\" }, { name: \"13:00\" }, { name: \"13:30\" }, { name: \"14:00\" }, { name: \"14:30\" }, { name: \"15:00\" }, { name: \"15:30\" }, { name: \"16:00\" },\r\n        { name: \"16:30\" }, { name: \"17:00\" }, { name: \"17:30\" }, { name: \"18:00\" }, { name: \"18:30\" }, { name: \"19:00\" }, { name: \"19:30\" }, { name: \"20:00\" },\r\n        { name: \"20:30\" }];\r\n        return (\r\n            <div>\r\n                <>{this.state.isLoggedIn ?\r\n                    <div>\r\n                        <Navbar searchBar={true} />\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\", marginLeft: \"3vw\" }} className=\"centerCartMessage\">\r\n                            Click pe o masa pentru a o rezerva\r\n                        </h2>\r\n                        <div className=\"tablesAvailabilityContainer\">\r\n                            <div className=\"calendarContainer\">\r\n                                <div className=\"dateMargin\">Alegeti data</div>\r\n                                <Calendar className=\"tablesAvailabilityCalendar\" style={{ marginTop: \"1vh\" }} value={this.state.startDate} onChange={(e) => this.setState({ startDate: e.value })}\r\n                                    dateFormat=\"dd-mm-yy\" showIcon monthNavigator yearNavigator yearRange=\"2021:2030\" />\r\n                            </div>\r\n                            <div className=\"calendarContainer\">\r\n\r\n                                <div className=\"tablesAvailabilityDiv\">Alegeti ora de incepere</div>\r\n                                <Dropdown className=\"tablesAvailabilityDropdown\" style={{ marginTop: \"1vh\" }} value={this.state.selectedStartHour} options={hours} onChange={(e) => this.setState({ selectedStartHour: e.value })}\r\n                                    optionLabel=\"name\" placeholder=\"Selectati ora\" />\r\n                            </div>\r\n                            <div className=\"calendarContainer\">\r\n                                <div className=\"tablesAvailabilityDiv\">Alegeti ora de terminare</div>\r\n                                <Dropdown className=\"tablesAvailabilityDropdown\" style={{ marginTop: \"1vh\" }} value={this.state.selectedEndHour} options={hours} onChange={(e) => this.setState({ selectedEndHour: e.value })}\r\n                                    optionLabel=\"name\" placeholder=\"Selectati ora\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"checkAvailabilityButton\">\r\n                            <Button onClick={this.checkAvailability}>Verificati disponibilitatea</Button>\r\n                        </div>\r\n                        <div className=\"tablesContainer\">\r\n                            {this.state.tables.map((table, index) =>\r\n                                <Link to={{\r\n                                    pathname: `/rezervare/masa${table.numar}`,\r\n                                    data: table,\r\n                                    isLoggedIn: this.state.isLoggedIn,\r\n                                    userEmail: this.state.userEmail\r\n                                }}>\r\n                                    <>{this.state.tables[index].tableState === \"ocupata\" ?\r\n                                        <i className=\"table fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(216, 31, 42)\" }}>\r\n                                            <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                        </i>\r\n                                        :\r\n                                        <>{this.state.tables[index].tableState === \"rezervata\" ?\r\n                                            <i className=\"table fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(253, 208, 23)\" }}>\r\n                                                <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                            </i>\r\n                                            :\r\n                                            <>{this.state.tables[index].tableState === \"libera\" ?\r\n                                                <i className=\"table fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"green\" }}>\r\n                                                    <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                                </i>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            </>\r\n                                        }\r\n                                        </>\r\n                                    }\r\n                                    </>\r\n                                </Link>)}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <Navbar searchBar={true} />\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                            Click pe o masa pentru a o rezerva\r\n                        </h2>\r\n                        <div className=\"tablesAvailabilityContainer\">\r\n                            <div className=\"calendarContainer\">\r\n                                <div className=\"dateMargin\">Alegeti data</div>\r\n                                <Calendar className=\"tablesAvailabilityCalendar\" style={{ marginTop: \"1vh\" }} value={this.state.startDate} onChange={(e) => this.setState({ startDate: e.value })}\r\n                                    dateFormat=\"dd-mm-yy\" showIcon monthNavigator yearNavigator yearRange=\"2021:2030\" />\r\n                            </div>\r\n                            <div className=\"calendarContainer\">\r\n\r\n                                <div className=\"tablesAvailabilityDiv\">Alegeti ora de incepere</div>\r\n                                <Dropdown className=\"tablesAvailabilityDropdown\" style={{ marginTop: \"1vh\" }} value={this.state.selectedStartHour} options={hours} onChange={(e) => this.setState({ selectedStartHour: e.value })}\r\n                                    optionLabel=\"name\" placeholder=\"Selectati ora\" />\r\n                            </div>\r\n                            <div className=\"calendarContainer\">\r\n                                <div className=\"tablesAvailabilityDiv\">Alegeti ora de terminare</div>\r\n                                <Dropdown className=\"tablesAvailabilityDropdown\" style={{ marginTop: \"1vh\" }} value={this.state.selectedEndHour} options={hours} onChange={(e) => this.setState({ selectedEndHour: e.value })}\r\n                                    optionLabel=\"name\" placeholder=\"Selectati ora\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"checkAvailabilityButton\">\r\n                            <Button onClick={this.checkAvailability}>Verificati disponibilitatea</Button>\r\n                        </div>\r\n                        <div className=\"tablesContainer\">\r\n                            {this.state.tables.map((table, index) =>\r\n                                <>{this.state.tables[index].tableState === \"ocupata\" ?\r\n                                    <i className=\"fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(216, 31, 42)\" }}\r\n                                        onClick={this.openLoginDialog}>\r\n                                        <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                    </i>\r\n                                    :\r\n                                    <>{this.state.tables[index].tableState === \"rezervata\" ?\r\n                                        <i className=\"fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"rgb(253, 208, 23)\" }}\r\n                                            onClick={this.openLoginDialog}>\r\n                                            <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                        </i>\r\n                                        :\r\n                                        <>{this.state.tables[index].tableState === \"libera\" ?\r\n                                            <i className=\"fas fa-table fa-10x\" key={index} id={`table${table.numar}`} style={{ color: \"green\" }}\r\n                                                onClick={this.openLoginDialog}>\r\n                                                <div style={{ fontSize: \"20px\", color: \"black\" }}>Masa {`${table.numar}`}</div>\r\n                                            </i>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        </>\r\n                                    }\r\n                                    </>\r\n                                }\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                </>\r\n                <Dialog header=\"Nu esti conectat\" visible={this.state.openLoginDialog} onHide={this.hideDialog} className='p-fluid'>\r\n                    <>{this.state.isLoggedIn ?\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                            Ati fost conectat cu succes!\r\n                        </h2>\r\n                        :\r\n                        < div >\r\n                            <div className=\"login\">\r\n                                <h2 className=\"title\">Intra in cont</h2>\r\n                                <div className=\"boxLogin\">\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Email\" >Email</label>\r\n                                        <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.loginEmail} onChange={(evt) => this.setState({ loginEmail: evt.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Parola\" >Parola</label>\r\n                                        <Password className=\"inputTextLogin\" type=\"text\" value={this.state.loginParola} onChange={(evt) => this.setState({ loginParola: evt.target.value })} feedback={false} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"centerLogin\">\r\n                                <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    </>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TablesMapAvailability;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport UserStore from './UserStore';\r\nimport User from './User';\r\n\r\nclass Appetizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n\r\n    }\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let productsFromDatabase = [];\r\n        ProductStore.getProductsByType(\"aperitive\").then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                productsFromDatabase = response;\r\n                this.setState({ products: productsFromDatabase });\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"products\">\r\n                    {\r\n                        this.state.products.map((e, index) => <Product key={index} productData={e} isOk={true} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Appetizer;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport UserStore from './UserStore';\r\nimport User from './User';\r\n\r\nclass MainDish extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n\r\n    }\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let productsFromDatabase = [];\r\n        ProductStore.getProductsByType(\"fel_principal\").then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                productsFromDatabase = response;\r\n                this.setState({ products: productsFromDatabase });\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"products\">\r\n                    {\r\n                        this.state.products.map((e, index) => <Product key={index} productData={e} isOk={true} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainDish;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport UserStore from './UserStore';\r\nimport User from './User';\r\n\r\nclass FastFood extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let productsFromDatabase = [];\r\n        ProductStore.getProductsByType(\"fast_food\").then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                productsFromDatabase = response;\r\n                this.setState({ products: productsFromDatabase });\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"products\">\r\n                    {\r\n                        this.state.products.map((e, index) => <Product key={index} productData={e} isOk={true} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default FastFood;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport UserStore from './UserStore';\r\nimport User from './User';\r\n\r\nclass Dessert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let productsFromDatabase = [];\r\n        ProductStore.getProductsByType(\"desert\").then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                productsFromDatabase = response;\r\n                this.setState({ products: productsFromDatabase });\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"products\">\r\n                    {\r\n                        this.state.products.map((e, index) => <Product key={index} productData={e} isOk={true} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dessert;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport UserStore from './UserStore';\r\nimport User from './User';\r\n\r\nclass Drinks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n\r\n    async getFinalProducts(response) {\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (localStorage.getItem('email')) {\r\n                let productsFromDatabase = await UserStore.getFavorites(localStorage.getItem('email'));\r\n                for (let j = 0; j < productsFromDatabase.length; j++) {\r\n                    if (response[i].nume === productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = true;\r\n                        break;\r\n                    }\r\n                    else if (response[i].nume !== productsFromDatabase[j].nume) {\r\n                        response[i].isAddedFavorites = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let productsFromDatabase = [];\r\n        ProductStore.getProductsByType(\"bauturi\").then((response) => {\r\n            this.getFinalProducts(response).then(() => {\r\n                productsFromDatabase = response;\r\n                this.setState({ products: productsFromDatabase });\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"products\">\r\n                    {\r\n                        this.state.products.map((e, index) => <Product key={index} productData={e} isOk={true} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drinks;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"contactContainer\">\r\n                    <div>Numar de telefon: 0720202020</div>\r\n                    <br />\r\n                    <div>Email: restaurant_contact@gmail.com</div>\r\n                    <br />\r\n                    <div>Adresa: Bucuresti, Piata Romana, Nr.10</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport ProductStore from './ProductStore';\r\nimport User from './User';\r\nimport UserStore from './UserStore';\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nfunction importAll(r) {\r\n    return r.keys().map(r);\r\n}\r\n\r\nconst images = importAll(require.context('./Images', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nclass ProductPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            product: {},\r\n            ingredients: [],\r\n            isAddedFavorites: false,\r\n            cantity: 0,\r\n            isLoggedIn: false,\r\n            userEmail: '',\r\n            openCartDialog: false,\r\n            finalProducts: [],\r\n            openLoginDialog: false,\r\n            totalPrice: 0,\r\n            openLoginDialog: false,\r\n            loginEmail: '',\r\n            loginParola: '',\r\n            nume: ''\r\n        }\r\n\r\n        this.addFavorites = () => {\r\n            if (this.state.isLoggedIn) {\r\n                let icon = document.getElementById(`heart_${this.props.match.params.nume}`);\r\n                if (this.state.isAddedFavorites === false) {\r\n                    icon.style.color = \"red\";\r\n                    let productName = { nume: `${this.props.location.productData.nume}` }\r\n                    UserStore.addFavorite(this.state.userEmail, productName);\r\n                    this.setState({ isAddedFavorites: true });\r\n                }\r\n                else if (this.state.isAddedFavorites === true) {\r\n                    icon.style.color = \"white\";\r\n                    UserStore.deleteFavorite(this.state.userEmail, this.props.location.productData.nume);\r\n                    this.setState({ isAddedFavorites: false })\r\n                }\r\n            }\r\n            else {\r\n                this.setState({ openLoginDialog: true })\r\n            }\r\n        }\r\n\r\n        this.addCart = () => {\r\n            if (this.state.isLoggedIn) {\r\n                let date = new Date();\r\n                let finalDate = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\r\n                UserStore.getShoppingCart(this.state.userEmail, \"in procesare\").then((shoppingCart) => {\r\n                    if (shoppingCart.message === \"not found\") {\r\n                        let newShoppingCart = { data: finalDate };\r\n                        UserStore.addShoppingCart(this.state.userEmail, newShoppingCart);\r\n                        let promiseProductFromDatabase = UserStore.getProductCart(this.state.userEmail, \"in procesare\", this.props.location.productData.nume);\r\n                        promiseProductFromDatabase.then(result => {\r\n                            if (result.message === \"not found\") {\r\n                                let product = { nume: `${this.props.location.productData.nume}`, cantitate: 1 };\r\n                                UserStore.addProductCart(this.state.userEmail, \"in procesare\", product);\r\n                                let finalProducts = this.state.finalProducts;\r\n                                ProductStore.getProduct(this.props.location.productData.nume).then((productFromDatabase) => {\r\n                                    product.descriere = productFromDatabase.descriere;\r\n                                    product.pret = productFromDatabase.pret;\r\n                                    finalProducts.push(product);\r\n                                    let totalPrice = this.state.totalPrice;\r\n                                    totalPrice += product.pret;\r\n                                    this.setState({\r\n                                        finalProducts: finalProducts,\r\n                                        openCartDialog: true,\r\n                                        totalPrice: totalPrice\r\n                                    });\r\n                                })\r\n                            }\r\n                            else {\r\n                                let newQuantity = result.cantitate + 1;\r\n                                let product = { nume: `${result.nume}`, cantitate: newQuantity };\r\n                                UserStore.updateProductCart(this.state.userEmail, \"in procesare\", result.nume, product);\r\n                                let totalPrice = this.state.totalPrice;\r\n                                let finalProducts = this.state.finalProducts;\r\n                                for (let i = 0; i < finalProducts.length; i++) {\r\n                                    if (finalProducts[i].nume === result.nume) {\r\n                                        finalProducts[i].cantitate = newQuantity;\r\n                                        totalPrice += finalProducts[i].pret;\r\n                                    }\r\n                                }\r\n                                this.setState({\r\n                                    finalProducts: finalProducts,\r\n                                    openCartDialog: true,\r\n                                    totalPrice: totalPrice\r\n                                });\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        let promiseProductFromDatabase = UserStore.getProductCart(this.state.userEmail, \"in procesare\", this.props.location.productData.nume);\r\n                        promiseProductFromDatabase.then(result => {\r\n                            if (result.message === \"not found\") {\r\n                                let product = { nume: `${this.props.location.productData.nume}`, cantitate: 1 };\r\n                                UserStore.addProductCart(this.state.userEmail, \"in procesare\", product);\r\n                                let finalProducts = this.state.finalProducts;\r\n                                ProductStore.getProduct(this.props.location.productData.nume).then((productFromDatabase) => {\r\n                                    product.descriere = productFromDatabase.descriere;\r\n                                    product.pret = productFromDatabase.pret;\r\n                                    finalProducts.push(product);\r\n                                    let totalPrice = this.state.totalPrice;\r\n                                    totalPrice += product.pret;\r\n                                    this.setState({\r\n                                        finalProducts: finalProducts,\r\n                                        openCartDialog: true,\r\n                                        totalPrice: totalPrice\r\n                                    });\r\n                                })\r\n                            }\r\n                            else {\r\n                                let newQuantity = result.cantitate + 1;\r\n                                let product = { nume: `${result.nume}`, cantitate: newQuantity };\r\n                                UserStore.updateProductCart(this.state.userEmail, \"in procesare\", result.nume, product);\r\n                                let totalPrice = this.state.totalPrice;\r\n                                let finalProducts = this.state.finalProducts;\r\n                                for (let i = 0; i < finalProducts.length; i++) {\r\n                                    if (finalProducts[i].nume === result.nume) {\r\n                                        finalProducts[i].cantitate = newQuantity;\r\n                                        totalPrice += finalProducts[i].pret;\r\n                                    }\r\n                                }\r\n                                this.setState({\r\n                                    finalProducts: finalProducts,\r\n                                    openCartDialog: true,\r\n                                    totalPrice: totalPrice\r\n                                });\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.setState({ openLoginDialog: true })\r\n            }\r\n        }\r\n\r\n        this.hideCartDialog = () => {\r\n            this.setState({ openCartDialog: false });\r\n        }\r\n\r\n        this.hideDialog = () => {\r\n            this.setState({ openLoginDialog: false });\r\n        }\r\n\r\n        this.priceBody = (rowData) => {\r\n            return (\r\n                <div>{rowData.pret} lei</div>\r\n            )\r\n        }\r\n\r\n        this.Submit = () => {\r\n            let OK = true;\r\n            if (this.state.loginEmail === \"\") {\r\n                OK = false;\r\n                toast('Email-ul trebuie completat!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else if (this.state.loginParola === \"\") {\r\n                OK = false;\r\n                toast('Parola trebuie completata!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                let ok = false;\r\n                let promise = UserStore.getUsers();\r\n                promise.then(response => {\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        if (response[i].email === this.state.loginEmail && response[i].parola === this.state.loginParola) {\r\n                            this.setState({ isLoggedIn: true })\r\n                            localStorage.setItem('isLoggedIn', this.state.isLoggedIn);\r\n                            localStorage.setItem('email', this.state.loginEmail);\r\n                            ok = true;\r\n                            this.setState({ nume: this.props.location.productData.nume });\r\n                            UserStore.getFavorites(this.state.loginEmail).then((favorites) => {\r\n                                for (let j = 0; j < favorites.length; j++) {\r\n                                    if (favorites[i].nume === this.state.nume) {\r\n                                        this.setState({ isAddedFavorites: true });\r\n                                    }\r\n                                }\r\n                                if (localStorage.getItem('isLoggedIn')) {\r\n                                    this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n                                }\r\n                                if (localStorage.getItem('email')) {\r\n                                    this.setState({ userEmail: localStorage.getItem('email') });\r\n                                }\r\n                                this.getFinalProducts();\r\n                            })\r\n                        }\r\n                        else if (response[i].email === this.state.loginEmail && response[i].parola !== this.state.loginParola) {\r\n                            toast('Email-ul sau parola nu au fost introduse corect!', {\r\n                                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                            })\r\n                            ok = true;\r\n                        }\r\n                    }\r\n                    if (ok === false) {\r\n                        toast('Utilizatorul cu acest email nu exista! Mergeti la pagina de inregistrare!', {\r\n                            autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        this.goBack = () => {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    async getFinalProducts() {\r\n        let products = await UserStore.getProductsCart(localStorage.getItem('email'), 'in procesare');\r\n        let totalPrice = 0;\r\n        for (let i = 0; i < products.length; i++) {\r\n            let product = await ProductStore.getProduct(products[i].nume);\r\n            products[i].descriere = product.descriere;\r\n            products[i].pret = product.pret;\r\n            totalPrice += products[i].pret * products[i].cantitate;\r\n        }\r\n        this.setState({\r\n            totalPrice: totalPrice,\r\n            finalProducts: products\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        let productPromise = ProductStore.getProduct(this.props.match.params.nume);\r\n        productPromise.then((response) => {\r\n            let productFromDatabase = response;\r\n            this.setState({ product: productFromDatabase });\r\n        })\r\n        let ingredientsPromise = ProductStore.getIngredients(this.props.match.params.nume);\r\n        ingredientsPromise.then((response) => {\r\n            let ingredientsFromDatabase = [];\r\n            for (let i = 0; i < response.length; i++) {\r\n                ingredientsFromDatabase[i] = response[i];\r\n            }\r\n            this.setState({ ingredients: ingredientsFromDatabase });\r\n        })\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({ isLoggedIn: localStorage.getItem('isLoggedIn') });\r\n            this.setState({ userEmail: localStorage.getItem('email') });\r\n            if (this.props.location.productData.isAddedFavorites) {\r\n                this.setState({ isAddedFavorites: this.props.location.productData.isAddedFavorites });\r\n            }\r\n        }\r\n        if (localStorage.getItem('isLoggedIn')) {\r\n            this.setState({\r\n                isLoggedIn: localStorage.getItem('isLoggedIn'),\r\n                userEmail: localStorage.getItem('email')\r\n            })\r\n            this.getFinalProducts();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let imageSource;\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (images[i].default.includes(this.props.match.params.nume)) {\r\n                imageSource = images[i].default;\r\n            }\r\n        }\r\n        const { product } = this.state;\r\n        const { ingredients } = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <div className=\"productContainer\">\r\n                    <div className=\"centerObject\">\r\n                        <img src={imageSource} className=\"productImageProductPage\" />\r\n                    </div>\r\n                    <div className=\"productItemsContainer\">\r\n                        <div className=\"productItems\" style={{ marginTop: \"2vh\" }}>Descriere</div>\r\n                        <div className=\"centerObject\">\r\n                            <hr className=\"line\"></hr>\r\n                        </div>\r\n                        <div className=\"productItems\">{product.descriere}</div>\r\n                        <div className=\"productItems\">Pret: {product.pret} lei</div>\r\n                        <div className=\"productItems\">Gramaj: {product.gramaj}g</div>\r\n                        <>{(product.tip === \"bauturi\") ?\r\n                            null\r\n                            :\r\n                            <div>\r\n                                <div className=\"productItems\">Ingrediente: </div>\r\n                                {ingredients.map((e, index) => <i className=\"ingredient pi pi-chevron-right\" key={index}> {e.nume} </i>)}\r\n                            </div>\r\n                        }\r\n                        </>\r\n                        <div className=\"outer\">\r\n                            <div className=\"inner\" >\r\n                                <Button className=\"addCartButton google p-p-0\" onClick={this.addCart} >\r\n                                    <i className=\"fas fa-shopping-cart\"></i>\r\n                                    <span className=\"p-px-3\">  Adauga in cos</span>\r\n                                </Button>\r\n                            </div>\r\n                            {this.state.isAddedFavorites ?\r\n                                <div className=\"inner\">\r\n                                    <Button className=\"favoritesButton google p-p-0\" onClick={this.addFavorites}>\r\n                                        <i id={`heart_${this.props.match.params.nume}`} className=\"fas fa-heart\" style={{ color: 'red' }}></i>\r\n                                        <span className=\"p-px-3\">  Adauga la favorite</span>\r\n                                    </Button>\r\n                                </div>\r\n                                :\r\n                                <div className=\"inner\">\r\n                                    <Button className=\"favoritesButton google p-p-0\" onClick={this.addFavorites}>\r\n                                        <i id={`heart_${this.props.match.params.nume}`} className=\"fas fa-heart\" style={{ color: 'white' }}></i>\r\n                                        <span className=\"p-px-3\">  Adauga la favorite</span>\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"backButtonProduct\">\r\n                            <Button label=\"Inapoi\" icon=\"pi pi-chevron-left\" onClick={this.goBack} className=\"p-button-raised p-button-text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog visible={this.state.openCartDialog} onHide={this.hideCartDialog} header=\"Mergi la cosul de cumparaturi?\" className='p-fluid' >\r\n                    <DataTable value={this.state.finalProducts} header=\"Cos de cumparaturi\">\r\n                        <Column header=\"Produs\" field=\"descriere\" />\r\n                        <Column header=\"Cantitate\" field=\"cantitate\" />\r\n                        <Column header=\"Pret\" body={this.priceBody} />\r\n                    </DataTable>\r\n                    <div className=\"totalPriceContainer\">\r\n                        <div className=\"totalPrice\" style={{ marginRight: \"13.5vw\", marginBottom: \"3vh\" }}>{this.state.totalPrice} lei</div>\r\n                    </div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Link to=\"/cos\"><Button className=\"p-button-rounded\" style={{ display: \"inline-block\" }}>Catre cos</Button></Link>\r\n                    </div>\r\n                </Dialog>\r\n                <Dialog header=\"Nu esti conectat\" visible={this.state.openLoginDialog} onHide={this.hideDialog} className='p-fluid'>\r\n                    <>{this.state.isLoggedIn ?\r\n                        <h2 style={{ color: \"rgb(140, 35, 158)\", marginTop: \"2vh\" }} className=\"centerCartMessage\">\r\n                            Ati fost conectat cu succes!\r\n                        </h2>\r\n                        :\r\n                        < div >\r\n                            <div className=\"login\">\r\n                                <h2 className=\"title\">Intra in cont</h2>\r\n                                <div className=\"boxLogin\">\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Email\" >Email</label>\r\n                                        <InputText className=\"inputTextLogin\" type=\"text\" value={this.state.loginEmail} onChange={(evt) => this.setState({ loginEmail: evt.target.value })} />\r\n                                    </div>\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"Parola\" >Parola</label>\r\n                                        <Password className=\"inputTextLogin\" type=\"text\" value={this.state.loginParola} onChange={(evt) => this.setState({ loginParola: evt.target.value })} feedback={false} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"centerLogin\">\r\n                                <Button className=\"submit\" onClick={this.Submit} label=\"Intra in cont\" />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    </>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductPage;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport Product from './Product';\r\nimport ProductStore from './ProductStore';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nclass ProductsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            value: ''\r\n        }\r\n\r\n        this.searchProducts = () => {\r\n            if (this.state.value === \"\") {\r\n                toast('Introduceti un produs!', {\r\n                    autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n                })\r\n            }\r\n            else {\r\n                if (this.state.value) {\r\n                    console.log(this.state.value)\r\n                    this.getProducts(this.state.value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.location.products) {\r\n            if (this.props.location.products.length !== 0) {\r\n                this.setState({ products: this.props.products });\r\n                this.getProducts(this.state.value);\r\n            }\r\n        }\r\n        if (this.props.location.value) {\r\n            console.log(this.props.location.value);\r\n            this.getProducts(this.props.location.value);\r\n        }\r\n        else if (this.state.value) {\r\n            this.getProducts(this.state.value);\r\n        }\r\n\r\n    }\r\n\r\n    async getProducts(value) {\r\n        if (value) {\r\n            console.log(value);\r\n            let finalProducts = [];\r\n            let splittedValue = value.split(' ');\r\n            console.log(splittedValue);\r\n            await ProductStore.getProducts().then((response) => {\r\n                console.log(response);\r\n                for (let i = 0; i < splittedValue.length; i++) {\r\n                    for (let j = 0; j < response.length; j++) {\r\n                        if (response[j].nume.includes(splittedValue[i].toLowerCase())) {\r\n                            console.log(finalProducts);\r\n                            if (this.state.products.length > 0) {\r\n                                for (let k = 0; k < finalProducts.length; k++) {\r\n                                    if (splittedValue[i].toLowerCase() !== finalProducts[k].nume) {\r\n                                        finalProducts.push(response[j]);\r\n                                    }\r\n                                }\r\n                                console.log(finalProducts);\r\n                            }\r\n                            else {\r\n                                finalProducts.push(response[j]);\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({ products: finalProducts });\r\n                }\r\n                console.log(finalProducts);\r\n                console.log(this.state.products)\r\n            })\r\n        }\r\n        else {\r\n            toast('Introduceti un produs!', {\r\n                autoClose: 5000, position: toast.POSITION.TOP_CENTER,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={false} />\r\n                <div>\r\n                    <span className=\"p-input-icon-left\">\r\n                        <i className=\"pi pi-search\" />\r\n                        <InputText className=\"searchBar\" value={this.state.value} onChange={(e) => this.setState({ value: e.target.value })} placeholder=\"Search\" />\r\n                    </span>\r\n                    <Button className=\"searchButton\" icon=\"pi pi-arrow-right\" className=\"p-button-raised p-button-text\" onClick={this.searchProducts} />\r\n                </div>\r\n                <>{(this.state.products.length === 0) ?\r\n                    <div className=\"centerCartMessage\" style={{ color: \"rgb(140, 35, 158)\", textDecoration: \"underline\" }}><h2>Nu au fost gasite produse</h2></div>\r\n                    :\r\n                    <div className=\"products\">\r\n                        {this.state.products.map((product, index) => <Product key={index} productData={product} isOk={true} />)}\r\n                    </div>\r\n                }\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductsPage;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport ProductStore from './ProductStore';\r\nimport UserStore from './UserStore';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nclass Report extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData: {}\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        ProductStore.getDaysOfWeeks().then(days => {\r\n            let last7Days = days.slice(-7);\r\n            for (let i = 0; i < last7Days.length; i++) {\r\n                last7Days[i].counter = 0;\r\n            }\r\n            UserStore.getUsers().then(users => {\r\n                for (let i = 0; i < users.length; i++) {\r\n                    for (let j = 0; j < last7Days.length; j++) {\r\n                        UserStore.getOrders(users[i].email).then((orders) => {\r\n                            for (let k = 0; k < orders.length; k++) {\r\n                                if (orders[k].data === last7Days[j].data) {\r\n                                    last7Days[j].counter += 1;\r\n                                }\r\n                            }\r\n                            let orderNumbers = [];\r\n                            for (let l = 0; l < last7Days.length; l++) {\r\n                                orderNumbers.push(last7Days[l].counter);\r\n                            }\r\n                            let labels = [];\r\n                            for (let l = 0; l < last7Days.length; l++) {\r\n                                labels.push(last7Days[l].data);\r\n                            }\r\n                            let chartData = {\r\n                                labels: labels,\r\n                                datasets: [\r\n                                    {\r\n                                        label: 'Numar comenzi',\r\n                                        backgroundColor: '#42A5F5',\r\n                                        data: orderNumbers\r\n                                    }\r\n                                ]\r\n                            };\r\n                            this.setState({ chartData: chartData });\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let basicOptions = {\r\n            maintainAspectRatio: false,\r\n            aspectRatio: .8,\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <Chart type=\"bar\" data={this.state.chartData} options={basicOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Report;","import React from 'react';\r\nimport Navbar from './NavbarComp';\r\nimport ProductStore from './ProductStore';\r\nimport { Chart } from 'primereact/chart';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\n\r\nclass ProductsReport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData: {},\r\n            value: ''\r\n        }\r\n\r\n        this.searchProducts = () => {\r\n            if (this.state.value) {\r\n                ProductStore.getProducts().then((products) => {\r\n                    for (let i = 0; i < products.length; i++) {\r\n                        ProductStore.getDayWeekOrderedProduct(this.state.value, products[i].nume).then((weekOrderedProduct) => {\r\n                            if (weekOrderedProduct.message === \"not found\") {\r\n                                products[i].cantitate = 0;\r\n                            }\r\n                            else {\r\n                                products[i].cantitate = weekOrderedProduct.cantitate;\r\n                            }\r\n                            let productsQuantity = [];\r\n                            for (let j = 0; j < products.length; j++) {\r\n                                productsQuantity.push(products[j].cantitate);\r\n                            }\r\n                            let labels = [];\r\n                            for (let l = 0; l < products.length; l++) {\r\n                                labels.push(products[l].nume);\r\n                            }\r\n                            let chartData2 = {\r\n                                labels: labels,\r\n                                datasets: [\r\n                                    {\r\n                                        label: `Numar produse comandate in data de ${this.state.value}`,\r\n                                        backgroundColor: '#42A5F5',\r\n                                        data: productsQuantity\r\n                                    }\r\n                                ]\r\n                            };\r\n                            this.setState({ chartData2: chartData2 });\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let date = new Date();\r\n        let finalDate = \"\";\r\n        if (date.getDate() <= 9) {\r\n            finalDate += \"0\" + date.getDate() + \"-\";\r\n        }\r\n        else {\r\n            finalDate += date.getDate() + \"-\";\r\n        }\r\n        if ((date.getMonth() + 1) <= 9) {\r\n            finalDate += \"0\" + (date.getMonth() + 1) + \"-\";\r\n        }\r\n        else {\r\n            finalDate += date.getMonth() + \"-\";\r\n        }\r\n        finalDate += date.getFullYear();\r\n        this.setState({ value: finalDate });\r\n        ProductStore.getProducts().then((products) => {\r\n            for (let i = 0; i < products.length; i++) {\r\n                ProductStore.getDayWeekOrderedProduct(finalDate, products[i].nume).then((weekOrderedProduct) => {\r\n                    if (weekOrderedProduct.message === \"not found\") {\r\n                        products[i].cantitate = 0;\r\n                    }\r\n                    else {\r\n                        products[i].cantitate = weekOrderedProduct.cantitate;\r\n                    }\r\n                    let productsQuantity = [];\r\n                    for (let j = 0; j < products.length; j++) {\r\n                        productsQuantity.push(products[j].cantitate);\r\n                    }\r\n                    let labels = [];\r\n                    for (let l = 0; l < products.length; l++) {\r\n                        labels.push(products[l].nume);\r\n                    }\r\n                    let chartData2 = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                label: `Numar produse comandate in data de ${finalDate}`,\r\n                                backgroundColor: '#42A5F5',\r\n                                data: productsQuantity\r\n                            }\r\n                        ]\r\n                    };\r\n                    this.setState({ chartData2: chartData2 });\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let basicOptions = {\r\n            maintainAspectRatio: false,\r\n            aspectRatio: .8,\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        let horizontalOptions = {\r\n            indexAxis: 'y',\r\n            maintainAspectRatio: false,\r\n            aspectRatio: .8,\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                <Navbar searchBar={true} />\r\n                <span className=\"centerInputText\">\r\n                    <div className=\"outer\">\r\n                        <div className=\"inner\">\r\n                            <InputText value={this.state.value} onChange={(evt) => this.setState({ value: evt.target.value })} placeholder=\"dd-mm-yyyy\" />\r\n                        </div>\r\n                        <div className=\"inner\">\r\n                            <Button style={{ marginLeft: \"-1.7vw\", marginBottom: \"-1vh\" }} icon=\"pi pi-arrow-right\" className=\"p-button-raised p-button-text\" onClick={this.searchProducts} />\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n                <Chart type=\"bar\" data={this.state.chartData2} options={basicOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductsReport;","import React from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from './Home';\nimport Profile from './Profile';\nimport Favorites from './Favorites';\nimport Cart from './Cart';\nimport Register from './Register';\nimport Login from './Login';\nimport Menu from './Menu';\nimport SoupProducts from './SoupProducts';\nimport TablesMap from './TablesMap';\nimport TableReservation from './TableReservation';\nimport TablesMapAvailability from './TablesMapAvailability';\nimport Appetizer from './Appetizer';\nimport MainDish from './MainDish';\nimport FastFood from './FastFood';\nimport Dessert from './Dessert';\nimport Drinks from './Drinks';\nimport Contact from './Contact';\nimport ProductPage from './ProductPage';\nimport ProductsPage from './ProductsPage';\nimport OrdersReport from './OrdersReport';\nimport ProductsReport from './ProductsReport';\nimport Order from './Order';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <main>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/harta\" component={TablesMap} exact />\n            <Route path=\"/rezervare/masa:numar\" component={TableReservation} exact />\n            <Route path=\"/verificare_disponibilitate_mese\" component={TablesMapAvailability} exact />\n            <Route path=\"/profil\" component={Profile} exact />\n            <Route path=\"/favorite\" component={Favorites} exact />\n            <Route path=\"/cos\" component={Cart} exact />\n            <Route path=\"/meniu\" component={Menu} exact />\n            <Route path=\"/produse/:nume\" component={ProductPage} exact />\n            <Route path=\"/aperitive\" component={Appetizer} exact />\n            <Route path=\"/supe_ciorbe\" component={SoupProducts} exact />\n            <Route path=\"/fel_principal\" component={MainDish} exact />\n            <Route path=\"/fast_food\" component={FastFood} exact />\n            <Route path=\"/desert\" component={Dessert} exact />\n            <Route path=\"/bauturi\" component={Drinks} exact />\n            <Route path=\"/contact\" component={Contact} exact />\n            <Route path=\"/inregistrare\" component={Register} exact />\n            <Route path=\"/logare\" component={Login} exact />\n            <Route path=\"/produse_cautate\" component={ProductsPage} exact />\n            <Route path=\"/rapoarte_comenzi\" component={OrdersReport} exact />\n            <Route path=\"/rapoarte_produse\" component={ProductsReport} exact />\n            <Route path=\"/comanda\" component={Order} exact />\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'primereact/resources/themes/saga-purple/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","var map = {\n\t\"./aperitiv1.jpg\": 88,\n\t\"./ceafa_porc_cartofi_prajiti.jpg\": 89,\n\t\"./ciorba_pui.jpg\": 90,\n\t\"./clatite_ciocolata.jpg\": 91,\n\t\"./hamburger_cartofi_prajiti.jpg\": 92,\n\t\"./papanasi_visine.jpg\": 93,\n\t\"./pepsi.jpg\": 94,\n\t\"./pizza_sunca.jpg\": 95,\n\t\"./prigat_capsuni_banane.jpg\": 96,\n\t\"./supa_galuste.jpg\": 97,\n\t\"./supa_taitei.jpg\": 98\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","export default __webpack_public_path__ + \"static/media/aperitiv1.b776aca5.jpg\";","export default __webpack_public_path__ + \"static/media/ceafa_porc_cartofi_prajiti.ad01adaa.jpg\";","export default __webpack_public_path__ + \"static/media/ciorba_pui.da147533.jpg\";","export default __webpack_public_path__ + \"static/media/clatite_ciocolata.0b2dc6e8.jpg\";","export default __webpack_public_path__ + \"static/media/hamburger_cartofi_prajiti.bc4715c0.jpg\";","export default __webpack_public_path__ + \"static/media/papanasi_visine.197f0283.jpg\";","export default __webpack_public_path__ + \"static/media/pepsi.623c24e3.jpg\";","export default __webpack_public_path__ + \"static/media/pizza_sunca.823f48d9.jpg\";","export default __webpack_public_path__ + \"static/media/prigat_capsuni_banane.aa1be7ab.jpg\";","export default __webpack_public_path__ + \"static/media/supa_galuste.ea448cfe.jpg\";","export default __webpack_public_path__ + \"static/media/supa_taitei.eb15d83b.jpg\";"],"sourceRoot":""}